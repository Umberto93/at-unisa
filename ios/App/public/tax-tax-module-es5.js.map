{"version":3,"sources":["webpack:///src/app/pages/esse3/tax/tax.page.ts","webpack:///src/app/pages/esse3/tax/tax-routing.module.ts","webpack:///src/app/pages/esse3/tax/tax.module.ts","webpack:///src/app/pages/esse3/tax/tax.page.scss","webpack:///src/app/pages/esse3/tax/tax.page.html"],"names":["TaxPage","userService","taxService","taxsList","labels","activeIndex","isReady","slideOpts","autoHeight","spaceBetween","getTax","bind","getUser","profile","persId","user","subscribe","taxs","forEach","tax","index","payed","push","paymentDate","expirationDate","event","target","value","parseInt","slides","slideTo","getActiveIndex","button","segment","children","click","selector","template","routes","path","component","TaxPageRoutingModule","imports","forChild","exports","TaxPageModule","declarations"],"mappings":"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","file":"tax-tax-module-es5.js","sourcesContent":["import { IonSegment, IonSlides } from '@ionic/angular';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Tax } from 'src/app/interfaces/tax';\r\nimport { TaxService } from 'src/app/services/esse3/tax/tax.service';\r\nimport { UserService } from 'src/app/services/user/user.service';\r\n\r\n@Component({\r\n    selector: 'app-tax',\r\n    templateUrl: './tax.page.html',\r\n    styleUrls: ['./tax.page.scss'],\r\n})\r\nexport class TaxPage implements OnInit {\r\n\r\n    @ViewChild(IonSlides) slides: IonSlides;\r\n    @ViewChild(IonSegment) segment: IonSegment;\r\n\r\n    private persId: number;\r\n    private isReady: boolean;\r\n    private activeIndex: number;\r\n    private labels: String[];\r\n    private slideOpts: any;\r\n    private taxsList: Tax[][];\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private taxService: TaxService\r\n    ) {\r\n        this.taxsList = [[], []];\r\n        this.labels = ['Pagate', 'Da pagare'];\r\n        this.activeIndex = 0;\r\n        this.isReady = false;\r\n        this.slideOpts = {\r\n            autoHeight: true,\r\n            spaceBetween: 20\r\n        }\r\n\r\n        this.getTax = this.getTax.bind(this);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        const profile = await this.userService.getUser();\r\n\r\n        this.persId = profile.user.persId;\r\n        this.getTax();\r\n    }\r\n\r\n    /**\r\n     * Recupera le tasse dello studente.\r\n     */\r\n    private getTax() {\r\n        return this.taxService.getTax(this.persId)\r\n            .subscribe((taxs: Tax[]) => {\r\n                taxs.forEach(tax => {\r\n                    const index = tax.payed ? 0 : 1;\r\n                    this.taxsList[index].push(tax);\r\n                });\r\n                this.isReady = true;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Restituisce la data della tase in base a se la tassa è stata pagata o meno.\r\n     * \r\n     * @param tax la specifica tassa.\r\n     */\r\n    private getDate(tax: Tax): Date {\r\n        if (tax.payed) {\r\n            return tax.paymentDate;\r\n        }\r\n\r\n        return tax.expirationDate;\r\n    }\r\n\r\n    /**\r\n     * Aggiorna la slide alla pressione in base allo specifico Segment Button.\r\n     * \r\n     * @param event L'evento associato al Segment Button.\r\n     */\r\n    private async slideTo(event: CustomEvent) {\r\n        const target = event.target as HTMLIonSegmentButtonElement;\r\n        const value = parseInt(target.value);\r\n\r\n        await this.slides.slideTo(value);\r\n        this.activeIndex = value;\r\n    }\r\n\r\n    /**\r\n     * Aggiorna il Segment Button sulla base dell'indice corrente della slide.\r\n     */\r\n    private async setActiveIndex() {\r\n        const index = await this.slides.getActiveIndex();\r\n\r\n        if (index !== this.activeIndex) {\r\n            const button = this.segment['el'].children[index] as HTMLElement;\r\n            button.click();\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaxPage } from './tax.page';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: TaxPage\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class TaxPageRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TaxPageRoutingModule } from './tax-routing.module';\r\n\r\nimport { TaxPage } from './tax.page';\r\nimport { UtilityModule } from '../../utility/utility.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        TaxPageRoutingModule,\r\n        UtilityModule\r\n    ],\r\n    declarations: [TaxPage]\r\n})\r\nexport class TaxPageModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YXgucGFnZS5zY3NzIn0= */\";","export default \"<ion-content class=\\\"page-content\\\">\\r\\n    <app-refresher [refreshCallback]=\\\"getTax\\\"></app-refresher>\\r\\n    <div class=\\\"flex flex-direction-column\\\">\\r\\n        <app-header>\\r\\n            <ion-toolbar>\\r\\n                <ion-title class=\\\"page-title\\\">Tasse</ion-title>\\r\\n            </ion-toolbar>\\r\\n            <ion-toolbar class=\\\"segment-toolbar\\\">\\r\\n                <ion-segment\\r\\n                    [value]=\\\"activeIndex\\\"\\r\\n                    (ionChange)=\\\"slideTo($event)\\\"\\r\\n                    swipeGesture=\\\"false\\\"\\r\\n                >\\r\\n                    <ion-segment-button\\r\\n                        *ngFor=\\\"let label of labels; index as i\\\"\\r\\n                        [value]=\\\"i\\\"\\r\\n                    >\\r\\n                        <ion-label>{{label}}</ion-label>\\r\\n                    </ion-segment-button>\\r\\n                </ion-segment>\\r\\n            </ion-toolbar>\\r\\n        </app-header>\\r\\n        <div class=\\\"page-main\\\">\\r\\n            <ion-slides\\r\\n                *ngIf=\\\"isReady\\\"\\r\\n                (ionSlideWillChange)=\\\"setActiveIndex()\\\"\\r\\n                [options]=\\\"slideOpts\\\"\\r\\n            >\\r\\n                <ion-slide *ngFor=\\\"let taxs of taxsList\\\">\\r\\n                    <ion-list class=\\\"app-list\\\">\\r\\n                        <ion-item *ngFor=\\\"let tax of taxs\\\">\\r\\n                            <ion-label>\\r\\n                                <h3>{{tax.name}}</h3>\\r\\n                                <div>\\r\\n                                    <i class=\\\"far fa-calendar\\\"></i>\\r\\n                                    <span>{{getDate(tax) | date:'dd/MM/yyyy'}}</span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <i class=\\\"fas fa-money-bill\\\"></i>\\r\\n                                    <span>{{tax.amount}} €</span>\\r\\n                                </div>\\r\\n                            </ion-label>\\r\\n                        </ion-item>\\r\\n                        <ion-item *ngIf=\\\"taxs.length === 0\\\">Nessun elemento da mostrare.</ion-item>\\r\\n                    </ion-list>\\r\\n                </ion-slide>\\r\\n            </ion-slides>\\r\\n        </div>\\r\\n    </div>\\r\\n</ion-content>\\r\\n\";"]}