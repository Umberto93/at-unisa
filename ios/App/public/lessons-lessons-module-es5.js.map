{"version":3,"sources":["webpack:///src/app/pages/agendaweb/lessons/lessons.page.scss","webpack:///src/app/pages/agendaweb/lessons/lessons.page.html","webpack:///src/app/pages/agendaweb/lessons/components/course-filter-modal/course-filter-modal.component.ts","webpack:///src/app/pages/agendaweb/lessons/components/course-filter-modal/course-filter-modal.component.html","webpack:///src/app/pages/agendaweb/lessons/components/lessons-prof/lessons-prof.component.ts","webpack:///src/app/pages/agendaweb/lessons/components/lessons-prof/lessons-prof.component.scss","webpack:///src/app/pages/agendaweb/lessons/lessons.page.ts","webpack:///src/app/pages/agendaweb/lessons/components/lessons-prof/lessons-prof.component.html","webpack:///src/app/pages/agendaweb/lessons/components/lessons-course/lessons-course.component.html","webpack:///src/app/pages/agendaweb/lessons/components/lessons-course/lessons-course.component.scss","webpack:///src/app/pages/agendaweb/lessons/components/lessons-course/lessons-course.component.ts","webpack:///src/app/pages/agendaweb/lessons/components/lesson-modal/lesson-modal.component.ts","webpack:///src/app/pages/agendaweb/lessons/components/lesson-modal/lesson-modal.component.html","webpack:///src/app/pages/agendaweb/lessons/components/lesson-modal/lesson-modal.component.scss","webpack:///src/app/pages/agendaweb/lessons/lessons-routing.module.ts","webpack:///src/app/pages/agendaweb/lessons/components/course-filter-modal/course-filter-modal.component.scss","webpack:///src/app/pages/agendaweb/lessons/lessons.module.ts","webpack:///src/app/services/agendaweb/lessons/lessons.service.ts"],"names":["CourseFilterModalComponent","navParams","courses","get","checkedSet","lessonsSet","Set","confirmCallback","filterCallback","bind","a","b","value","localeCompare","key","has","event","detail","checked","add","selector","template","LessonsProfComponent","lessonsService","formBuilder","modalController","actionSheetController","customActionSheetOptions","cssClass","header","mode","slideOpts","autoHeight","spaceBetween","daysLabels","labels","activeIndex","isReady","yearIndex","profIndex","yearOptions","profOptions","lessonsForm","group","year","required","prof","term","initOperations","updateSetCallback","getLessonsYearOptions","subscribe","res","reset","target","parseInt","slides","slideTo","getActiveIndex","index","button","segment","children","click","periodi","optionValue","controls","activeYear","getLessonsProfOptions","getLessonsByProf","scheduler","Object","keys","legend","setTimeout","schedule","lessons","filter","lesson","teachingCode","dayIndex","create","component","componentProps","modal","present","select","options","map","label","valore","title","onWillDismiss","then","data","findIndex","newSet","update","LessonsPage","route","searchBy","queryParams","params","LessonsCourseComponent","courseIndex","courseYearIndex","courseOptions","courseYearOptions","course","courseYear","pub_periodi","getLessonsCourseOptions","activeCourse","getLessonsCourseYearsOptions","getLessonsByCourse","LessonModalComponent","day","routes","path","LessonsPageRoutingModule","imports","forChild","exports","LessonsPageModule","declarations","LessonsService","http","base","easycourseApi","JSON","parse","split","set","responseType","pipe","parseResponse","getLessons","celle","forEach","name","nome_insegnamento","replace","trim","codice_insegnamento","toLocaleLowerCase","percorso_didattico","profsFullnames","docente","profsMails","mail_docente","profs","fullname","lastname","firstname","mail","push","timeStart","ora_inizio","timeEnd","ora_fine","room","aula","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFA,0BAA0B;AAOnC,4CACYC,SADZ,EACgC;AAAA;;AAApB,eAAAA,SAAA,GAAAA,SAAA;AAER,eAAKC,OAAL,GAAe,KAAKD,SAAL,CAAeE,GAAf,CAAmB,SAAnB,CAAf;AAEA;;;;AAGA,eAAKC,UAAL,GAAkB,KAAKH,SAAL,CAAeE,GAAf,CAAmB,YAAnB,CAAlB;AAEA;;;;AAGA,eAAKE,UAAL,GAAkB,IAAIC,GAAJ,CAAQ,KAAKF,UAAb,CAAlB;AACA,eAAKG,eAAL,GAAuB,KAAKN,SAAL,CAAeE,GAAf,CAAmB,iBAAnB,CAAvB;AAEA,eAAKK,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAxBkC;AAAA;AAAA,qCA0BxB,CAAG;AAEd;;;;;;;;;AA5BmC;AAAA;AAAA,kCAqC/BC,CArC+B,EAsC/BC,CAtC+B,EAsCF;AAC7B,mBAAOD,CAAC,CAACE,KAAF,CAAQC,aAAR,CAAsBF,CAAC,CAACC,KAAxB,CAAP;AACH;AAED;;;;;;;;;AA1CmC;AAAA;AAAA,oCAkDjBE,GAlDiB,EAkDJ;AAC3B,mBAAO,KAAKV,UAAL,CAAgBW,GAAhB,CAAoBD,GAApB,CAAP;AACH;AAED;;;;;;;AAtDmC;AAAA;AAAA,uCA4DdE,KA5Dc,EA4DM;AACrC,gBAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,gBAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;AACA,gBAAMN,KAAK,GAAGK,MAAM,CAACL,KAArB;;AAEA,gBAAI,CAACM,OAAL,EAAc;AACV,mBAAKb,UAAL,WAAuBO,KAAvB;AACH,aAFD,MAEO;AACH,mBAAKP,UAAL,CAAgBc,GAAhB,CAAoBP,KAApB;AACH;AACJ;AAED;;;;;AAxEmC;AAAA;AAAA,2CA4EV;AACrB,iBAAKL,eAAL,CAAqB,KAAKF,UAA1B;AACH;AA9EkC;;AAAA;AAAA,S;;;;gBAP9B;;;;AAOIL,gCAA0B,6DALtC,gEAAU;AACPoB,gBAAQ,EAAE,yBADH;AAEPC,gBAAQ,EAAR,sFAFO;;AAAA,OAAV,CAKsC,GAA1BrB,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCkBFsB,oBAAoB;AAmC7B,sCACYC,cADZ,EAEYC,WAFZ,EAGYC,eAHZ,EAIYC,qBAJZ,EAIwD;AAAA;;AAH5C,eAAAH,cAAA,GAAAA,cAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AAlCK,eAAAC,wBAAA,GAAgC;AAC7CC,oBAAQ,EAAE,0BADmC;AAE7CC,kBAAM,EAAE,WAFqC;AAG7CC,gBAAI,EAAE;AAHuC,WAAhC;AAMA,eAAAC,SAAA,GAAiB;AAC9BC,sBAAU,EAAE,IADkB;AAE9BC,wBAAY,EAAE;AAFgB,WAAjB;AAKA,eAAAC,UAAA,GAAkB;AAC/B,eAAG,QAD4B;AAE/B,eAAG,SAF4B;AAG/B,eAAG,WAH4B;AAI/B,eAAG,SAJ4B;AAK/B,eAAG;AAL4B,WAAlB;AAyBb,eAAKC,MAAL,GAAc,CAAC,SAAD,EAAY,WAAZ,CAAd;AACA,eAAKC,WAAL,GAAmB,CAAnB;AACA,eAAKC,OAAL,GAAe,KAAf,CAJoD,CAMpD;;AACA,eAAKhC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB,CAPoD,CASpD;;AACA,eAAKgC,SAAL,GAAiB,CAAC,CAAlB;AACA,eAAKC,SAAL,GAAiB,CAAC,CAAlB,CAXoD,CAapD;;AACA,eAAKC,WAAL,GAAmB,EAAnB;AACA,eAAKC,WAAL,GAAmB,EAAnB;AAEA,eAAKC,WAAL,GAAmB,KAAKlB,WAAL,CAAiBmB,KAAjB,CAAuB;AACtCC,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWC,QAA/B,CADgC;AAEtCC,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,QAA/B,CAFgC;AAGtCE,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWF,QAA/B;AAHgC,WAAvB,CAAnB;AAMA,eAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBvC,IAApB,CAAyB,IAAzB,CAAtB;AACA,eAAKwC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBxC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAhE4B;AAAA;AAAA,qCAkElB;AACP,iBAAKuC,cAAL;AACH;AAED;;;;;AAtE6B;AAAA;AAAA,2CA0EJ;AAAA;;AACrB,mBAAO,KAAKzB,cAAL,CAAoB2B,qBAApB,GACFC,SADE,CACQ,UAACC,GAAD,EAAc;AACrB;AACA,mBAAI,CAACd,SAAL,GAAiB,CAAC,CAAlB;AACA,mBAAI,CAACC,SAAL,GAAiB,CAAC,CAAlB,CAHqB,CAKrB;;AACA,mBAAI,CAACC,WAAL,GAAmB,EAAnB;AACA,mBAAI,CAACC,WAAL,GAAmB,EAAnB;;AACA,mBAAI,CAACC,WAAL,CAAiBW,KAAjB,GARqB,CAUrB;;;AACA,mBAAI,CAACb,WAAL,GAAmBY,GAAnB;AACA,mBAAI,CAACf,OAAL,GAAe,IAAf;AACH,aAdE,CAAP;AAeH;AAED;;;;;;AA5F6B;AAAA;AAAA,kCAiGPrB,KAjGO,EAiGa;;;;;;;AAChCsC,4B,GAAStC,KAAK,CAACsC,M;AACf1C,2B,GAAQ2C,QAAQ,CAACD,MAAM,CAAC1C,KAAR,C;;AAEtB,6BAAM,KAAK4C,MAAL,CAAYC,OAAZ,CAAoB7C,KAApB,CAAN;;;AACA,2BAAKwB,WAAL,GAAmBxB,KAAnB;;;;;;;;;AACH;AAED;;;;AAzG6B;AAAA;AAAA,2CA4GE;;;;;;;;AACb,6BAAM,KAAK4C,MAAL,CAAYE,cAAZ,EAAN;;;AAARC,2B;;AAEN,0BAAIA,KAAK,KAAK,KAAKvB,WAAnB,EAAgC;AACtBwB,8BADsB,GACb,KAAKC,OAAL,CAAa,IAAb,EAAmBC,QAAnB,CAA4BH,KAA5B,CADa;AAE5BC,8BAAM,CAACG,KAAP;AACH;;;;;;;;;AACJ;AAED;;;;;;;;;AArH6B;AAAA;AAAA,mCA6HZrD,CA7HY,EA6HcC,CA7Hd,EA6HwC;AACjE,mBAAOA,CAAC,CAACG,GAAF,CAAMD,aAAN,CAAoBH,CAAC,CAACI,GAAtB,CAAP;AACH;AAED;;;;AAjI6B;AAAA;AAAA,qCAoIb;AACZ,mBAAO,KAAK0B,WAAZ;AACH;AAED;;;;AAxI6B;AAAA;AAAA,qCA2Ib;AACZ,gBAAI,KAAKF,SAAL,KAAmB,CAAC,CAAxB,EAA2B;AACvB,qBAAO,EAAP;AACH;;AAED,mBAAO,KAAKG,WAAZ;AACH;AAED;;;;AAnJ6B;AAAA;AAAA,qCAsJV;AACf,gBAAI,KAAKF,SAAL,KAAmB,CAAC,CAAxB,EAA2B;AACvB,qBAAO,EAAP;AACH;;AAED,mBAAO,KAAKE,WAAL,CAAiB,KAAKF,SAAtB,EAAiCyB,OAAxC;AACH;AAED;;;;;;AA9J6B;AAAA;AAAA,uCAmKRhD,KAnKQ,EAmKY;AAAA;;AACrC,gBAAMiD,WAAW,GAAGjD,KAAK,CAACC,MAAN,CAAaL,KAAjC;;AAEA,gBAAI,KAAK0B,SAAL,KAAmB,CAAC,CAAxB,EAA2B;AACvB,mBAAKI,WAAL,CAAiBwB,QAAjB,CAA0BpB,IAA1B,CAA+BO,KAA/B;AACA,mBAAKX,WAAL,CAAiBwB,QAAjB,CAA0BnB,IAA1B,CAA+BM,KAA/B;AACA,mBAAKd,SAAL,GAAiB,CAAC,CAAlB;AACH;;AAED,gBAAI0B,WAAW,KAAK,EAApB,EAAwB;AACpB,mBAAK3B,SAAL,GAAiB2B,WAAW,CAACN,KAA7B;AAEA,kBAAMQ,UAAU,GAAG,KAAKzB,WAAL,CAAiB9B,KAAjB,CAAuBgC,IAAvB,CAA4BhC,KAA/C;AACA,mBAAKW,cAAL,CAAoB6C,qBAApB,CAA0CD,UAA1C,EACKhB,SADL,CACe,UAACC,GAAD,EAAS;AAChB,sBAAI,CAACX,WAAL,GAAmBW,GAAnB;AACH,eAHL;AAIH;AACJ;AAED;;;;;;AAvL6B;AAAA;AAAA,uCA4LRpC,KA5LQ,EA4LY;AACrC,gBAAMiD,WAAW,GAAGjD,KAAK,CAACC,MAAN,CAAaL,KAAjC;;AAEA,gBAAI,KAAK2B,SAAL,KAAmB,CAAC,CAAxB,EAA2B;AACvB,mBAAKG,WAAL,CAAiBwB,QAAjB,CAA0BnB,IAA1B,CAA+BM,KAA/B;AACH;;AAED,gBAAIY,WAAW,KAAK,EAApB,EAAwB;AACpB,mBAAK1B,SAAL,GAAiB0B,WAAW,CAACN,KAA7B;AACH;AACJ;AAED;;;;;AAxM6B;AAAA;AAAA,yCA4MN;AAAA;;AACnB,iBAAKpC,cAAL,CAAoB8C,gBAApB,CACI,KAAK3B,WAAL,CAAiB9B,KAAjB,CAAuBgC,IAAvB,CAA4BhC,KADhC,EAEI,KAAK8B,WAAL,CAAiB9B,KAAjB,CAAuBkC,IAAvB,CAA4BlC,KAFhC,EAGI,KAAK8B,WAAL,CAAiB9B,KAAjB,CAAuBmC,IAAvB,CAA4BnC,KAHhC,EAIEuC,SAJF,CAKI,UAACmB,SAAD,EAA0B;AACtB,oBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACA,oBAAI,CAACjE,UAAL,GAAkB,IAAIC,GAAJ,CAAQiE,MAAM,CAACC,IAAP,CAAYF,SAAS,CAACG,MAAtB,CAAR,CAAlB;AAEAC,wBAAU,CAAC,YAAM;AACb,sBAAI,CAACtC,WAAL;;AACA,sBAAI,CAACoB,MAAL,CAAYC,OAAZ,CAAoB,MAAI,CAACrB,WAAzB;AACH,eAHS,EAGP,GAHO,CAAV;AAIH,aAbL;AAeH;AAED;;;;AA9N6B;AAAA;AAAA,wCAiOP;AAClB,mBAAO,KAAKkC,SAAL,CAAeK,QAAtB;AACH;AAED;;;;AArO6B;AAAA;AAAA,sCAwOT;AAChB,mBAAO,KAAKL,SAAL,CAAeG,MAAtB;AACH;AAED;;;;;;AA5O6B;AAAA;AAAA,qCAiPVG,OAjPU,EAiPS;AAAA;;AAClC,mBAAOA,OAAO,CACTC,MADE,CACK,UAACC,MAAD;AAAA,qBAAoB,MAAI,CAACzE,UAAL,CAAgBU,GAAhB,CAAoB+D,MAAM,CAACC,YAA3B,CAApB;AAAA,aADL,CAAP;AAEH;AAED;;;;;;AAtP6B;AAAA;AAAA,iCA2PdC,QA3Pc,EA2PI;AAC7B,mBAAO,KAAK9C,UAAL,CAAgB8C,QAAhB,CAAP;AACH;AAED;;;;;;;;;;;AA/P6B;AAAA;AAAA,qDAyQY;;;;;;;;AACvB,6BAAM,KAAKvD,eAAL,CAAqBwD,MAArB,CAA4B;AAC5CC,iCAAS,EAAE,6GADiC;AAE5CC,sCAAc,EAAE;AACZjF,iCAAO,EAAE,KAAKoE,SAAL,CAAeG,MADZ;AAEZrE,oCAAU,EAAE,KAAKC,UAFL;AAGZE,yCAAe,EAAE,KAAK0C;AAHV,yBAF4B;AAO5CrB,gCAAQ,EAAE;AAPkC,uBAA5B,CAAN;;;AAARwD,2B;;AAUC,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;;;;AACV;AAED;;;;;;AAvR6B;AAAA;AAAA,iDA4RQC,MA5RR,EA4R2B;;;;;;;;;;AACtC,6BAAM,KAAK7D,eAAL,CAAqBwD,MAArB,CAA4B;AAC5CC,iCAAS,EAAE,iHADiC;AAE5CC,sCAAc,EAAE;AACZI,iCAAO,EAAE,KAAK9C,WAAL,CAAiB+C,GAAjB,CAAqB,UAAC1C,IAAD,EAAe;AACzC,mCAAO;AACH2C,mCAAK,EAAE3C,IAAI,CAAC2C,KADT;AAEH7E,mCAAK,EAAEkC,IAAI,CAAC4C;AAFT,6BAAP;AAIH,2BALQ,CADG;AAOZC,+BAAK,EAAE;AAPK,yBAF4B;AAW5C/D,gCAAQ,EAAE;AAXkC,uBAA5B,CAAN;;;AAARwD,2B;AAcNA,2BAAK,CAACQ,aAAN,GAAsBC,IAAtB,CAA2B,UAACT,KAAD,EAAgB;AACvC,4BAAIA,KAAK,CAACU,IAAV,EAAgB;AACZ,8BAAMlF,KAAK,GAAGwE,KAAK,CAACU,IAApB;;AACA,8BAAMnC,KAAK,GAAG,MAAI,CAAClB,WAAL,CAAiBsD,SAAjB,CAA2B,UAACjD,IAAD;AAAA,mCAAeA,IAAI,CAAC4C,MAAL,KAAgB9E,KAA/B;AAAA,2BAA3B,CAAd;;AAEA0E,gCAAM,CAAC1E,KAAP,GAAe;AACX+C,iCAAK,EAAEA,KADI;AAEX/C,iCAAK,EAAEA;AAFI,2BAAf;AAIH;AACJ,uBAVD;;AAYA,6BAAMwE,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACH;AAED;;;;;;AA1T6B;AAAA;AAAA,4CA+THW,MA/TG,EA+TkB;AAAA;;AAC3C,iBAAK3F,UAAL,GAAkB2F,MAAlB,CAD2C,CAE3C;;AACAtB,sBAAU,CAAC,YAAM;AAAE,oBAAI,CAAClB,MAAL,CAAYyC,MAAZ;AAAsB,aAA/B,EAAiC,GAAjC,CAAV;AACH;AAED;;;;;;AArU6B;AAAA;AAAA,6CA0UInB,MA1UJ,EA0UoB;;;;;;;;AAC/B,6BAAM,KAAKrD,eAAL,CAAqBwD,MAArB,CAA4B;AAC5CC,iCAAS,EAAE,yFADiC;AAE5CC,sCAAc,EAAE;AACZL,gCAAM,EAAEA;AADI,yBAF4B;AAK5ClD,gCAAQ,EAAE;AALkC,uBAA5B,CAAN;;;AAARwD,2B;;AAQC,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;;;;AACV;AApV4B;;AAAA;AAAA,S;;;;gBATxB;;gBANA;;gBADyD;;gBAAzD;;;;;;gBAkBJ,uD;AAAS,iBAAC,wDAAD;;;gBACT,uD;AAAS,iBAAC,yDAAD;;;AAHD/D,0BAAoB,6DALhC,gEAAU;AACPF,gBAAQ,EAAE,kBADH;AAEPC,gBAAQ,EAAR,+EAFO;;AAAA,OAAV,CAKgC,GAApBC,oBAAoB,CAApB;;;;;;;;;;;;;;;;AClBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCQF4E,WAAW;AAIpB,6BACYC,KADZ,EACiC;AAAA;;AAArB,eAAAA,KAAA,GAAAA,KAAA;AAER,eAAKC,QAAL,GAAgB,QAAhB;AACH;;AARmB;AAAA;AAAA,qCAUT;AAAA;;AACP,iBAAKD,KAAL,CAAWE,WAAX,CAAuBlD,SAAvB,CAAiC,UAAAmD,MAAM,EAAI;AACvC,kBAAIA,MAAM,CAAC,UAAD,CAAV,EAAwB;AACpB,sBAAI,CAACF,QAAL,GAAgBE,MAAM,CAAC,UAAD,CAAtB;AACH;AACJ,aAJD;AAKH;AAhBmB;;AAAA;AAAA,S;;;;gBAPf;;;;AAOIJ,iBAAW,6DALvB,gEAAU;AACP9E,gBAAQ,EAAE,aADH;AAEPC,gBAAQ,EAAR,qEAFO;;AAAA,OAAV,CAKuB,GAAX6E,WAAW,CAAX;;;;;;;;;;;;;;;;ACRb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCiBFK,sBAAsB;AAqC/B,wCACYhF,cADZ,EAEYC,WAFZ,EAGYC,eAHZ,EAG4C;AAAA;;AAFhC,eAAAF,cAAA,GAAAA,cAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAnCK,eAAAE,wBAAA,GAAgC;AAC7CC,oBAAQ,EAAE,0BADmC;AAE7CC,kBAAM,EAAE,WAFqC;AAG7CC,gBAAI,EAAE;AAHuC,WAAhC;AAMA,eAAAC,SAAA,GAAiB;AAC9BC,sBAAU,EAAE,IADkB;AAE9BC,wBAAY,EAAE;AAFgB,WAAjB;AAKA,eAAAC,UAAA,GAAkB;AAC/B,eAAG,QAD4B;AAE/B,eAAG,SAF4B;AAG/B,eAAG,WAH4B;AAI/B,eAAG,SAJ4B;AAK/B,eAAG;AAL4B,WAAlB;AA0Bb,eAAKC,MAAL,GAAc,CAAC,SAAD,EAAY,WAAZ,CAAd;AACA,eAAKC,WAAL,GAAmB,CAAnB;AACA,eAAKC,OAAL,GAAe,KAAf,CAJwC,CAMxC;;AACA,eAAKhC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB,CAPwC,CASxC;;AACA,eAAKgC,SAAL,GAAiB,CAAC,CAAlB;AACA,eAAKkE,WAAL,GAAmB,CAAC,CAApB;AACA,eAAKC,eAAL,GAAuB,CAAC,CAAxB,CAZwC,CAcxC;;AACA,eAAKjE,WAAL,GAAmB,EAAnB;AACA,eAAKkE,aAAL,GAAqB,EAArB;AACA,eAAKC,iBAAL,GAAyB,EAAzB;AAEA,eAAKjE,WAAL,GAAmB,KAAKlB,WAAL,CAAiBmB,KAAjB,CAAuB;AACtCC,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWC,QAA/B,CADgC;AAEtC+D,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW/D,QAA/B,CAF8B;AAGtCgE,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWhE,QAA/B,CAH0B;AAItCE,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWF,QAA/B;AAJgC,WAAvB,CAAnB;AAOA,eAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBvC,IAApB,CAAyB,IAAzB,CAAtB;AACA,eAAKwC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBxC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AApE8B;AAAA;AAAA,qCAsEpB;AACP,iBAAKuC,cAAL;AACH;AAED;;;;;AA1E+B;AAAA;AAAA,2CA8EN;AAAA;;AACrB,mBAAO,KAAKzB,cAAL,CAAoB2B,qBAApB,GACFC,SADE,CACQ,UAACC,GAAD,EAAc;AACrB;AACA,oBAAI,CAACd,SAAL,GAAiB,CAAC,CAAlB;AACA,oBAAI,CAACkE,WAAL,GAAmB,CAAC,CAApB;AACA,oBAAI,CAACC,eAAL,GAAuB,CAAC,CAAxB,CAJqB,CAMrB;;AACA,oBAAI,CAACjE,WAAL,GAAmB,EAAnB;AACA,oBAAI,CAACkE,aAAL,GAAqB,EAArB;AACA,oBAAI,CAACC,iBAAL,GAAyB,EAAzB;;AACA,oBAAI,CAACjE,WAAL,CAAiBW,KAAjB,GAVqB,CAYrB;;;AACA,oBAAI,CAACb,WAAL,GAAmBY,GAAnB;AACA,oBAAI,CAACf,OAAL,GAAe,IAAf;AACH,aAhBE,CAAP;AAiBH;AAED;;;;;;AAlG+B;AAAA;AAAA,kCAuGTrB,KAvGS,EAuGW;;;;;;;AAChCsC,4B,GAAStC,KAAK,CAACsC,M;AACf1C,2B,GAAQ2C,QAAQ,CAACD,MAAM,CAAC1C,KAAR,C;;AAEtB,6BAAM,KAAK4C,MAAL,CAAYC,OAAZ,CAAoB7C,KAApB,CAAN;;;AACA,2BAAKwB,WAAL,GAAmBxB,KAAnB;;;;;;;;;AACH;AAED;;;;AA/G+B;AAAA;AAAA,2CAkHA;;;;;;;;AACb,6BAAM,KAAK4C,MAAL,CAAYE,cAAZ,EAAN;;;AAARC,2B;;AAEN,0BAAIA,KAAK,KAAK,KAAKvB,WAAnB,EAAgC;AACtBwB,8BADsB,GACb,KAAKC,OAAL,CAAa,IAAb,EAAmBC,QAAnB,CAA4BH,KAA5B,CADa;AAE5BC,8BAAM,CAACG,KAAP;AACH;;;;;;;;;AACJ;AAED;;;;;;;;;AA3H+B;AAAA;AAAA,mCAmIdrD,CAnIc,EAmIYC,CAnIZ,EAmIsC;AACjE,mBAAOA,CAAC,CAACG,GAAF,CAAMD,aAAN,CAAoBH,CAAC,CAACI,GAAtB,CAAP;AACH;AAED;;;;AAvI+B;AAAA;AAAA,qCA0If;AACZ,mBAAO,KAAK0B,WAAZ;AACH;AAED;;;;AA9I+B;AAAA;AAAA,uCAiJb;AACd,gBAAI,KAAKF,SAAL,KAAmB,CAAC,CAAxB,EAA2B;AACvB,qBAAO,EAAP;AACH;;AAED,mBAAO,KAAKoE,aAAZ;AACH;AAED;;;;AAzJ+B;AAAA;AAAA,2CA4JT;AAClB,gBAAI,KAAKF,WAAL,KAAqB,CAAC,CAA1B,EAA6B;AACzB,qBAAO,EAAP;AACH;;AAED,mBAAO,KAAKG,iBAAZ;AACH;AAED;;;;AApK+B;AAAA;AAAA,qCAuKZ;AACf,gBAAI,KAAKF,eAAL,KAAyB,CAAC,CAA9B,EAAiC;AAC7B,qBAAO,EAAP;AACH;;AAED,mBAAO,KAAKC,aAAL,CAAmB,KAAKF,WAAxB,EAAqCM,WAA5C;AACH;AAED;;;;;;AA/K+B;AAAA;AAAA,uCAoLV9F,KApLU,EAoLU;AAAA;;AACrC,gBAAMiD,WAAW,GAAGjD,KAAK,CAACC,MAAN,CAAaL,KAAjC;;AAEA,gBAAI,KAAK0B,SAAL,KAAmB,CAAC,CAAxB,EAA2B;AACvB,mBAAKI,WAAL,CAAiBwB,QAAjB,CAA0B0C,MAA1B,CAAiCvD,KAAjC;AACA,mBAAKX,WAAL,CAAiBwB,QAAjB,CAA0B2C,UAA1B,CAAqCxD,KAArC;AACA,mBAAKX,WAAL,CAAiBwB,QAAjB,CAA0BnB,IAA1B,CAA+BM,KAA/B;AACA,mBAAKmD,WAAL,GAAmB,CAAC,CAApB;AACA,mBAAKC,eAAL,GAAuB,CAAC,CAAxB;AACH;;AAED,gBAAIxC,WAAW,KAAK,EAApB,EAAwB;AACpB,mBAAK3B,SAAL,GAAiB2B,WAAW,CAACN,KAA7B;AAEA,kBAAMQ,UAAU,GAAG,KAAKzB,WAAL,CAAiB9B,KAAjB,CAAuBgC,IAAvB,CAA4BhC,KAA/C;AACA,mBAAKW,cAAL,CAAoBwF,uBAApB,CAA4C5C,UAA5C,EACKhB,SADL,CACe,UAACC,GAAD,EAAS;AAChB,sBAAI,CAACsD,aAAL,GAAqBtD,GAArB;AACH,eAHL;AAIH;AACJ;AAED;;;;;;AA1M+B;AAAA;AAAA,yCA+MRpC,KA/MQ,EA+MY;AAAA;;AACvC,gBAAMiD,WAAW,GAAGjD,KAAK,CAACC,MAAN,CAAaL,KAAjC;;AAEA,gBAAI,KAAK4F,WAAL,KAAqB,CAAC,CAA1B,EAA6B;AACzB,mBAAK9D,WAAL,CAAiBwB,QAAjB,CAA0B2C,UAA1B,CAAqCxD,KAArC;AACA,mBAAKX,WAAL,CAAiBwB,QAAjB,CAA0BnB,IAA1B,CAA+BM,KAA/B;AACA,mBAAKoD,eAAL,GAAuB,CAAC,CAAxB;AACH;;AAED,gBAAIxC,WAAW,KAAK,EAApB,EAAwB;AACpB,mBAAKuC,WAAL,GAAmBvC,WAAW,CAACN,KAA/B;AAEA,kBAAMQ,UAAU,GAAG,KAAKzB,WAAL,CAAiB9B,KAAjB,CAAuBgC,IAAvB,CAA4BhC,KAA/C;AACA,kBAAMoG,YAAY,GAAG,KAAKtE,WAAL,CAAiB9B,KAAjB,CAAuBgG,MAAvB,CAA8BhG,KAAnD;AACA,mBAAKW,cAAL,CAAoB0F,4BAApB,CAAiD9C,UAAjD,EAA6D6C,YAA7D,EACK7D,SADL,CACe,UAACC,GAAD,EAAc;AACrB,uBAAI,CAACuD,iBAAL,GAAyBvD,GAAzB;AACH,eAHL;AAIH;AACJ;AAED;;;;;;AApO+B;AAAA;AAAA,6CAyOJpC,KAzOI,EAyOgB;AAC3C,gBAAMiD,WAAW,GAAGjD,KAAK,CAACC,MAAN,CAAaL,KAAjC;;AAEA,gBAAI,KAAK6F,eAAL,KAAyB,CAAC,CAA9B,EAAiC;AAC7B,mBAAK/D,WAAL,CAAiBwB,QAAjB,CAA0BnB,IAA1B,CAA+BM,KAA/B;AACH;;AAED,gBAAIY,WAAW,KAAK,EAApB,EAAwB;AACpB,mBAAKwC,eAAL,GAAuBxC,WAAW,CAACN,KAAnC;AACH;AACJ;AAED;;;;;AArP+B;AAAA;AAAA,yCAyPR;AAAA;;AACnB,iBAAKpC,cAAL,CAAoB2F,kBAApB,CACI,KAAKxE,WAAL,CAAiB9B,KAAjB,CAAuBgC,IAAvB,CAA4BhC,KADhC,EAEI,KAAK8B,WAAL,CAAiB9B,KAAjB,CAAuBgG,MAAvB,CAA8BhG,KAFlC,EAGI,KAAK8B,WAAL,CAAiB9B,KAAjB,CAAuBiG,UAAvB,CAAkCjG,KAHtC,EAII,KAAK8B,WAAL,CAAiB9B,KAAjB,CAAuBmC,IAAvB,CAA4BnC,KAJhC,EAKEuC,SALF,CAMI,UAACmB,SAAD,EAA0B;AACtB,qBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACA,qBAAI,CAACjE,UAAL,GAAkB,IAAIC,GAAJ,CAAQiE,MAAM,CAACC,IAAP,CAAYF,SAAS,CAACG,MAAtB,CAAR,CAAlB;AAEAC,wBAAU,CAAC,YAAM;AACb,uBAAI,CAACtC,WAAL;;AACA,uBAAI,CAACoB,MAAL,CAAYC,OAAZ,CAAoB,OAAI,CAACrB,WAAzB;AACH,eAHS,EAGP,GAHO,CAAV;AAIH,aAdL;AAgBH;AAED;;;;AA5Q+B;AAAA;AAAA,wCA+QT;AAClB,mBAAO,KAAKkC,SAAL,CAAeK,QAAtB;AACH;AAED;;;;AAnR+B;AAAA;AAAA,sCAsRX;AAChB,mBAAO,KAAKL,SAAL,CAAeG,MAAtB;AACH;AAED;;;;;;AA1R+B;AAAA;AAAA,qCA+RZG,OA/RY,EA+RO;AAAA;;AAClC,mBAAOA,OAAO,CACTC,MADE,CACK,UAACC,MAAD;AAAA,qBAAoB,OAAI,CAACzE,UAAL,CAAgBU,GAAhB,CAAoB+D,MAAM,CAACC,YAA3B,CAApB;AAAA,aADL,CAAP;AAEH;AAED;;;;;;AApS+B;AAAA;AAAA,iCAyShBC,QAzSgB,EAySE;AAC7B,mBAAO,KAAK9C,UAAL,CAAgB8C,QAAhB,CAAP;AACH;AAED;;;;;;;;;;;AA7S+B;AAAA;AAAA,qDAuTU;;;;;;;;AACvB,6BAAM,KAAKvD,eAAL,CAAqBwD,MAArB,CAA4B;AAC5CC,iCAAS,EAAE,6GADiC;AAE5CC,sCAAc,EAAE;AACZjF,iCAAO,EAAE,KAAKoE,SAAL,CAAeG,MADZ;AAEZrE,oCAAU,EAAE,KAAKC,UAFL;AAGZE,yCAAe,EAAE,KAAK0C;AAHV,yBAF4B;AAO5CrB,gCAAQ,EAAE;AAPkC,uBAA5B,CAAN;;;AAARwD,2B;;AAUC,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;;;;AACV;AAED;;;;;;AArU+B;AAAA;AAAA,4CA0ULW,MA1UK,EA0UgB;AAAA;;AAC3C,iBAAK3F,UAAL,GAAkB2F,MAAlB,CAD2C,CAE3C;;AACAtB,sBAAU,CAAC,YAAM;AAAE,qBAAI,CAAClB,MAAL,CAAYyC,MAAZ;AAAsB,aAA/B,EAAiC,GAAjC,CAAV;AACH;AAED;;;;;;AAhV+B;AAAA;AAAA,6CAqVEnB,MArVF,EAqVkB;;;;;;;;AAC/B,6BAAM,KAAKrD,eAAL,CAAqBwD,MAArB,CAA4B;AAC5CC,iCAAS,EAAE,yFADiC;AAE5CC,sCAAc,EAAE;AACZL,gCAAM,EAAEA;AADI,yBAF4B;AAK5ClD,gCAAQ,EAAE;AALkC,uBAA5B,CAAN;;;AAARwD,2B;;AAQC,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;;;;AACV;AA/V8B;;AAAA;AAAA,S;;;;gBAR1B;;gBANA;;gBADuB;;;;;;gBAiB3B,uD;AAAS,iBAAC,wDAAD;;;gBACT,uD;AAAS,iBAAC,yDAAD;;;AAHDkB,4BAAsB,6DALlC,gEAAU;AACPnF,gBAAQ,EAAE,oBADH;AAEPC,gBAAQ,EAAR,iFAFO;;AAAA,OAAV,CAKkC,GAAtBkF,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRAY,oBAAoB;AAY7B,sCACYlH,SADZ,EACgC;AAAA;;AAApB,eAAAA,SAAA,GAAAA,SAAA;AATK,eAAAiC,UAAA,GAAkB;AAC/B,eAAG,QAD4B;AAE/B,eAAG,SAF4B;AAG/B,eAAG,WAH4B;AAI/B,eAAG,SAJ4B;AAK/B,eAAG;AAL4B,WAAlB;AAWb,eAAK4C,MAAL,GAAc,KAAK7E,SAAL,CAAeE,GAAf,CAAmB,QAAnB,CAAd;AACH;;AAhB4B;AAAA;AAAA,qCAkBlB,CAAG;AAlBe;AAAA;AAAA,mCAoBZ;AACb,mBAAO,KAAK+B,UAAL,CAAgB,KAAK4C,MAAL,CAAYsC,GAA5B,CAAP;AACH;AAtB4B;;AAAA;AAAA,S;;;;gBATxB;;;;AASID,0BAAoB,6DALhC,gEAAU;AACP/F,gBAAQ,EAAE,kBADH;AAEPC,gBAAQ,EAAR,+EAFO;;AAAA,OAAV,CAKgC,GAApB8F,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAME,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEpC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaqC,wBAAwB;AAAA;AAAA,O;;AAAxBA,8BAAwB,6DAJpC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIoC,GAAxBH,wBAAwB,CAAxB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCqCFI,iBAAiB;AAAA;AAAA,O;;AAAjBA,uBAAiB,6DAtB7B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,gFALO,EAMP,qEANO,CADD;AASRI,oBAAY,EAAE,CACZ,yDADY,EAEZ,0GAFY,EAGZ,oGAHY,EAIZ,yHAJY,EAKZ,qGALY,CATN;AAgBRF,eAAO,EAAE,CACP,0GADO,EAEP,oGAFO,EAGP,yHAHO;AAhBD,OAAT,CAsB6B,GAAjBC,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCxBAE,cAAc;AAIvB,gCACYC,IADZ,EAC4B;AAAA;;AAAhB,eAAAA,IAAA,GAAAA,IAAA;AAHK,eAAAC,IAAA,aAAU,yEAAYC,aAAtB;AAIZ;AAEL;;;;;;;AARuB;AAAA;AAAA,wCAaD5E,GAbC,EAaU;AAC7B,mBAAO6E,IAAI,CAACC,KAAL,CAAW9E,GAAG,CAAC+E,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAX,CAAP;AACH;AAED;;;;;AAjBuB;AAAA;AAAA,kDAqBF;AACjB,mBAAO,KAAKL,IAAL,CAAU3H,GAAV,WAAiB,KAAK4H,IAAtB,0BAAiD;AACpDzB,oBAAM,EAAE,IAAI,+DAAJ,GACH8B,GADG,CACC,IADD,EACO,KADP,EAEHA,GAFG,CAEC,IAFD,EAEO,GAFP;AAD4C,aAAjD,CAAP;AAKH;AAED;;;;;;;AA7BuB;AAAA;AAAA,kDAmCCxF,IAnCD,EAmCa;AAAA;;AAChC,mBAAO,KAAKkF,IAAL,CAAU3H,GAAV,WAAiB,KAAK4H,IAAtB,0BAAiD;AACpDzB,oBAAM,EAAE,IAAI,+DAAJ,GACH8B,GADG,CACC,IADD,EACO,KADP,EAEHA,GAFG,CAEC,IAFD,EAEOxF,IAFP,EAGHwF,GAHG,CAGC,MAHD,EAGS,OAHT,CAD4C;AAKpDC,0BAAY,EAAE;AALsC,aAAjD,EAMJC,IANI,CAOH,2DAAI,UAAClF,GAAD,EAAc;AACd,qBAAO,OAAI,CAACmF,aAAL,CAAmBnF,GAAnB,CAAP;AACH,aAFD,CAPG,CAAP;AAWH;AAED;;;;;;;AAjDuB;AAAA;AAAA,gDAuDDR,IAvDC,EAuDW;AAC9B,mBAAO,KAAKkF,IAAL,CAAU3H,GAAV,WAAiB,KAAK4H,IAAtB,0BAAiD;AACpDzB,oBAAM,EAAE,IAAI,+DAAJ,GACH8B,GADG,CACC,IADD,EACO,KADP,EAEHA,GAFG,CAEC,IAFD,EAEOxF,IAFP,EAGHwF,GAHG,CAGC,MAHD,EAGS,SAHT;AAD4C,aAAjD,CAAP;AAMH;AAED;;;;;;;;AAhEuB;AAAA;AAAA,uDAuEMxF,IAvEN,EAuEoBgE,MAvEpB,EAuEkC;AACrD,mBAAO,KAAKkB,IAAL,CAAU3H,GAAV,WAAiB,KAAK4H,IAAtB,sBAA6C;AAChDzB,oBAAM,EAAE,IAAI,+DAAJ,GACH8B,GADG,CACC,KADD,kBACiBxF,IADjB,8BACyCgE,MADzC;AADwC,aAA7C,CAAP;AAIH;AAED;;;;;;;;;;AA9EuB;AAAA;AAAA,6CAwFnBhE,IAxFmB,EAyFnBgE,MAzFmB,EA0FnBC,UA1FmB,EA2FnB9D,IA3FmB,EA2FP;AAAA;;AAEZ,mBAAO,KAAK+E,IAAL,CAAU3H,GAAV,WAAiB,KAAK4H,IAAtB,yBAAgD;AACnDzB,oBAAM,EAAE,IAAI,+DAAJ,GACH8B,GADG,CACC,MADD,EACS,YADT,EAEHA,GAFG,CAEC,SAFD,EAEY,OAFZ,EAGHA,GAHG,CAGC,MAHD,EAGSxF,IAHT,EAIHwF,GAJG,CAIC,OAJD,EAIUxB,MAJV,EAKHwB,GALG,CAKC,OALD,EAKUvB,UALV,EAMHuB,GANG,CAMC,wBAND,EAM2B,KAN3B,EAOHA,GAPG,CAOC,mBAPD,EAOsBrF,IAPtB;AAD2C,aAAhD,EASJuF,IATI,CAUH,2DAAI,UAAClF,GAAD;AAAA,qBAAc,OAAI,CAACoF,UAAL,CAAgBpF,GAAhB,CAAd;AAAA,aAAJ,CAVG,CAAP;AAYH;AAED;;;;;;;;AA3GuB;AAAA;AAAA,2CAmHnBR,IAnHmB,EAoHnBE,IApHmB,EAqHnBC,IArHmB,EAqHP;AAAA;;AAEZ,mBAAO,KAAK+E,IAAL,CAAU3H,GAAV,WAAiB,KAAK4H,IAAtB,yBAAgD;AACnDzB,oBAAM,EAAE,IAAI,+DAAJ,GACH8B,GADG,CACC,MADD,EACS,YADT,EAEHA,GAFG,CAEC,SAFD,EAEY,SAFZ,EAGHA,GAHG,CAGC,MAHD,EAGSxF,IAHT,EAIHwF,GAJG,CAIC,SAJD,EAIYtF,IAJZ,EAKHsF,GALG,CAKC,wBALD,EAK2B,KAL3B,EAMHA,GANG,CAMC,mBAND,EAMsBrF,IANtB;AAD2C,aAAhD,EAQJuF,IARI,CASH,2DAAI,UAAClF,GAAD;AAAA,qBAAc,OAAI,CAACoF,UAAL,CAAgBpF,GAAhB,CAAd;AAAA,aAAJ,CATG,CAAP;AAWH;AAED;;;;;;AApIuB;AAAA;AAAA,qCAyIJA,GAzII,EAyIM;AACzB,gBAAMlB,UAAU,GAAG;AACf,wBAAU,CADK;AAEf,yBAAW,CAFI;AAGf,2BAAa,CAHE;AAIf,0BAAY,CAJG;AAKf,wBAAU;AALK,aAAnB;AAQA,gBAAM0C,OAAO,GAAexB,GAAG,CAACqF,KAAhC;AACA,gBAAM9D,QAAQ,GAAG;AACb,iBAAG,EADU;AAEb,iBAAG,EAFU;AAGb,iBAAG,EAHU;AAIb,iBAAG,EAJU;AAKb,iBAAG;AALU,aAAjB;AAOA,gBAAMF,MAAM,GAAQ,EAApB;AAEAG,mBAAO,CAAC8D,OAAR,CAAgB,UAAC5D,MAAD,EAAiB;AAC7B,kBAAM6D,IAAI,GAAG7D,MAAM,CAAC8D,iBAAP,CAAyBC,OAAzB,CAAiC,sDAAjC,EAAyF,EAAzF,EAA6FC,IAA7F,EAAb;AACA,kBAAM/D,YAAY,GAAGD,MAAM,CAACiE,mBAA5B;AACA,kBAAM3B,GAAG,GAAGtC,MAAM,CAACgB,IAAP,CAAYkD,iBAAZ,EAAZ;AACA,kBAAM9I,OAAO,GAAG4E,MAAM,CAACmE,kBAAP,CAA0Bd,KAA1B,CAAgC,QAAhC,CAAhB;AAEA,kBAAIe,cAAc,GAAGpE,MAAM,CAACqE,OAA5B;AACA,kBAAIC,UAAU,GAAGtE,MAAM,CAACuE,YAAxB;AACA,kBAAMC,KAAK,GAAkB,EAA7B;;AAEA,kBAAIJ,cAAJ,EAAoB;AAChBA,8BAAc,GAAGA,cAAc,CAACf,KAAf,CAAqB,GAArB,CAAjB;AACAiB,0BAAU,GAAGA,UAAU,GAAGA,UAAU,CAACjB,KAAX,CAAiB,GAAjB,CAAH,GAA2B,EAAlD;AAEAe,8BAAc,CAACR,OAAf,CAAuB,UAACa,QAAD,EAAmB5F,KAAnB,EAAqC;AAAA,6CAC1B4F,QAAQ,CAACT,IAAT,GAAgBX,KAAhB,CAAsB,GAAtB,CAD0B;AAAA;AAAA,sBACjDqB,QADiD;AAAA,sBACvCC,SADuC;;AAExD,sBAAMC,IAAI,GAAGN,UAAU,CAACzF,KAAD,CAAV,IAAqB,EAAlC;AAEA2F,uBAAK,CAACK,IAAN,CAAW;AACPF,6BAAS,EAAEA,SADJ;AAEPD,4BAAQ,EAAEA,QAFH;AAGPE,wBAAI,EAAEA;AAHC,mBAAX;AAKH,iBATD;AAUH;;AAED,kBAAM1E,QAAQ,GAAG9C,UAAU,CAACkF,GAAD,CAA3B;AACAzC,sBAAQ,CAACK,QAAD,CAAR,CAAmB2E,IAAnB,CAAwB;AACpBhB,oBAAI,EAAEA,IADc;AAEpB5D,4BAAY,EAAEA,YAFM;AAGpBqC,mBAAG,EAAEpC,QAHe;AAIpB4E,yBAAS,EAAE9E,MAAM,CAAC+E,UAJE;AAKpBC,uBAAO,EAAEhF,MAAM,CAACiF,QALI;AAMpBC,oBAAI,EAAElF,MAAM,CAACmF,IANO;AAOpBX,qBAAK,EAAEA,KAPa;AAQpBpJ,uBAAO,EAAEA;AARW,eAAxB;AAWAuE,oBAAM,CAACM,YAAD,CAAN,KAAyBN,MAAM,CAACM,YAAD,CAAN,GAAuB4D,IAAhD;AACH,aAvCD;AAyCA,mBAAO;AACHhE,sBAAQ,EAAEA,QADP;AAEHF,oBAAM,EAAEA;AAFL,aAAP;AAIH;AAzMsB;;AAAA;AAAA,S;;;;gBAblB;;;;AAaIoD,oBAAc,6DAH1B,iEAAW;AACRqC,kBAAU,EAAE;AADJ,OAAX,CAG0B,GAAdrC,cAAc,CAAd","file":"lessons-lessons-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsZXNzb25zLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-content class=\\\"page-content\\\">\\r\\n    <app-lessons-course *ngIf=\\\"searchBy === 'course'\\\"></app-lessons-course>\\r\\n    <app-lessons-prof *ngIf=\\\"searchBy === 'prof'\\\"></app-lessons-prof>\\r\\n</ion-content>\\r\\n\";","import { KeyValue } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NavParams } from '@ionic/angular';\r\n\r\n@Component({\r\n    selector: 'app-course-filter-modal',\r\n    templateUrl: './course-filter-modal.component.html',\r\n    styleUrls: ['./course-filter-modal.component.scss'],\r\n})\r\nexport class CourseFilterModalComponent implements OnInit {\r\n\r\n    private courses: any;\r\n    private checkedSet: Set<string>;\r\n    private lessonsSet: Set<string>;\r\n    private confirmCallback: Function;\r\n\r\n    constructor(\r\n        private navParams: NavParams\r\n    ) {\r\n        this.courses = this.navParams.get('courses');\r\n\r\n        /* Set contenente i codici dei corsi di cui l'utente sta attualmente visualizzando \r\n         * le lezioni.\r\n         */\r\n        this.checkedSet = this.navParams.get('checkedSet');\r\n\r\n        /* Nuovo Set contenente i nuovi codici dei corsi di cui l'utente vorrà visualizzare\r\n         * le lezioni\r\n         */\r\n        this.lessonsSet = new Set(this.checkedSet);\r\n        this.confirmCallback = this.navParams.get('confirmCallback');\r\n\r\n        this.filterCallback = this.filterCallback.bind(this);\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    /**\r\n     * Effettua l'ordinamento crescente delle opzioni mostrate nel modale.\r\n     * \r\n     * @param a E' la prima coppia <chiave, valore>. La chiave è una stringa che \r\n     * rappresenta il codice di un corso mentre il valore ne rappresenta il nome. \r\n     * @param b E' la seconda coppia <chiave, valore>. La chiave è una stringa che \r\n     * rappresenta il codice di un corso mentre il valore ne rappresenta il nome.\r\n     */\r\n    private ascSort(\r\n        a: KeyValue<string, string>,\r\n        b: KeyValue<string, string>) {\r\n        return a.value.localeCompare(b.value);\r\n    }\r\n\r\n    /**\r\n     * Permette di verificare se l'opzione in esame è associata a un corso di cui\r\n     * l'utente desidera visualizzare le lezioni.\r\n     * Il metodo verifica la presenza del codice del corso, passato come parametro\r\n     * di input, all'interno del checkedSet (parametro passato come input al componente).\r\n     * \r\n     * @param key Indica il codice dell'esame. \r\n     */\r\n    private isChecked(key: string) {\r\n        return this.checkedSet.has(key);\r\n    }\r\n\r\n    /**\r\n     * Permette di aggiornare il lessonsSet (nuovo Set) sulla base dell'opzione\r\n     * selezionata/deselezionata.\r\n     *  \r\n     * @param event L'evento di change della Ion Checkbox. \r\n     */\r\n    private handleChange(event: CustomEvent) {\r\n        const detail = event.detail;\r\n        const checked = detail.checked;\r\n        const value = detail.value;\r\n\r\n        if (!checked) {\r\n            this.lessonsSet.delete(value);\r\n        } else {\r\n            this.lessonsSet.add(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback per effettuare il filtraggio delle lezioni sulla base del lessonsSet\r\n     * (nuovo Set).\r\n     */\r\n    private filterCallback() {\r\n        this.confirmCallback(this.lessonsSet);\r\n    }\r\n\r\n}\r\n","export default \"<app-modal\\r\\n    title=\\\"Seleziona insegnamenti\\\"\\r\\n    [confirmButton]=\\\"true\\\"\\r\\n    [confirmCallback]=\\\"filterCallback\\\"\\r\\n>\\r\\n    <ion-list>\\r\\n        <ion-item *ngFor=\\\"let course of courses | keyvalue: ascSort\\\">\\r\\n            <ion-label>{{course.value}}</ion-label>\\r\\n            <ion-checkbox\\r\\n                slot=\\\"end\\\"\\r\\n                [value]=\\\"course.key\\\"\\r\\n                [checked]=\\\"isChecked(course.key)\\\"\\r\\n                (ionChange)=\\\"handleChange($event)\\\"\\r\\n            ></ion-checkbox>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</app-modal>\\r\\n\";","import { KeyValue } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActionSheetController, IonSegment, IonSelect, IonSlides, ModalController } from '@ionic/angular';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Lesson } from 'src/app/interfaces/lesson';\r\nimport { Scheduler } from 'src/app/interfaces/scheduler';\r\nimport { LessonModalComponent } from '../lesson-modal/lesson-modal.component';\r\nimport { CourseFilterModalComponent } from '../course-filter-modal/course-filter-modal.component';\r\nimport { LessonsService } from 'src/app/services/agendaweb/lessons/lessons.service';\r\nimport { SearchModalComponent } from 'src/app/pages/components/search-modal/search-modal.component';\r\n\r\n\r\n@Component({\r\n    selector: 'app-lessons-prof',\r\n    templateUrl: './lessons-prof.component.html',\r\n    styleUrls: ['./lessons-prof.component.scss'],\r\n})\r\nexport class LessonsProfComponent implements OnInit {\r\n\r\n    @ViewChild(IonSlides) slides: IonSlides;\r\n    @ViewChild(IonSegment) segment: IonSegment;\r\n\r\n    private readonly customActionSheetOptions: any = {\r\n        cssClass: 'form-select-action-sheet',\r\n        header: 'Seleziona',\r\n        mode: 'md'\r\n    };\r\n\r\n    private readonly slideOpts: any = {\r\n        autoHeight: true,\r\n        spaceBetween: 20\r\n    };\r\n\r\n    private readonly daysLabels: any = {\r\n        0: 'Lunedì',\r\n        1: 'Martedì',\r\n        2: 'Mercoledì',\r\n        3: 'Giovedì',\r\n        4: 'Venerdì'\r\n    };\r\n\r\n    private labels: String[];\r\n    private activeIndex: number;\r\n    private isReady: boolean;\r\n    private lessonsForm: FormGroup;\r\n    private scheduler: Scheduler;\r\n    private lessonsSet: Set<string>;\r\n    private yearIndex: number;\r\n    private profIndex: number;\r\n    private yearOptions: any;\r\n    private profOptions: any;\r\n\r\n    constructor(\r\n        private lessonsService: LessonsService,\r\n        private formBuilder: FormBuilder,\r\n        private modalController: ModalController,\r\n        private actionSheetController: ActionSheetController\r\n    ) {\r\n        this.labels = ['Ricerca', 'Riepilogo'];\r\n        this.activeIndex = 0;\r\n        this.isReady = false;\r\n\r\n        // Set dei corsi di cui visualizzare le lezioni.\r\n        this.lessonsSet = new Set();\r\n\r\n        // Indici per le informazioni di riferimento.\r\n        this.yearIndex = -1;\r\n        this.profIndex = -1;\r\n\r\n        // Opzioni select.\r\n        this.yearOptions = {};\r\n        this.profOptions = [];\r\n\r\n        this.lessonsForm = this.formBuilder.group({\r\n            year: new FormControl('', Validators.required),\r\n            prof: new FormControl('', Validators.required),\r\n            term: new FormControl('', Validators.required)\r\n        });\r\n\r\n        this.initOperations = this.initOperations.bind(this);\r\n        this.updateSetCallback = this.updateSetCallback.bind(this);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initOperations();\r\n    }\r\n\r\n    /**\r\n     * Permette di inizializzare il componente e di ottenere le opzioni \r\n     * relative al select per l'Anno Accademico.\r\n     */\r\n    private initOperations() {\r\n        return this.lessonsService.getLessonsYearOptions()\r\n            .subscribe((res: any) => {\r\n                // Reset indici per le informazioni di riferimento.\r\n                this.yearIndex = -1;\r\n                this.profIndex = -1;\r\n\r\n                // Reset opzioni select e form.\r\n                this.yearOptions = {};\r\n                this.profOptions = [];\r\n                this.lessonsForm.reset();\r\n\r\n                // Aggiornamento dati.\r\n                this.yearOptions = res;\r\n                this.isReady = true;\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Aggiorna la slide alla pressione in base allo specifico Segment Button.\r\n     * \r\n     * @param event L'evento associato al Segment Button.\r\n     */\r\n    private async slideTo(event: CustomEvent) {\r\n        const target = event.target as HTMLIonSegmentButtonElement;\r\n        const value = parseInt(target.value);\r\n\r\n        await this.slides.slideTo(value);\r\n        this.activeIndex = value;\r\n    }\r\n\r\n    /**\r\n     * Aggiorna il Segment Button sulla base dell'indice corrente della slide.\r\n     */\r\n    private async setActiveIndex() {\r\n        const index = await this.slides.getActiveIndex();\r\n\r\n        if (index !== this.activeIndex) {\r\n            const button = this.segment['el'].children[index] as HTMLElement;\r\n            button.click();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Effettua l'ordinamento decrescente delle opzioni relative all'Anno Accademico.\r\n     * \r\n     * @param a E' la prima coppia <chiave, valore>. La chiave è una stringa che \r\n     * rappresenta l'Anno Accademico mentre il valore è l'oggetto opzione. \r\n     * @param b E' la seconda coppia <chiave, valore>. La chiave è una stringa che\r\n     * rappresenta l'Anno Accademico mentre il valore è l'oggetto opzione.\r\n     */\r\n    private descSort(a: KeyValue<string, any>, b: KeyValue<string, any>) {\r\n        return b.key.localeCompare(a.key);\r\n    }\r\n\r\n    /**\r\n     * Restituisce le opzioni del select relative all'Anno Accademico.\r\n     */\r\n    private getYears(): any {\r\n        return this.yearOptions;\r\n    }\r\n\r\n    /**\r\n     * Restituisce le opzioni del select relative al Docente.\r\n     */\r\n    private getProfs(): any {\r\n        if (this.yearIndex === -1) {\r\n            return [];\r\n        }\r\n\r\n        return this.profOptions;\r\n    }\r\n\r\n    /**\r\n     * Restituisce le opzioni del select relative al Periodo Didattico.\r\n     */\r\n    private getTerms() {\r\n        if (this.profIndex === -1) {\r\n            return [];\r\n        }\r\n\r\n        return this.profOptions[this.profIndex].periodi;\r\n    }\r\n\r\n    /**\r\n     * Imposta l'indice relativo all'Anno Accademico di riferimento.\r\n     * \r\n     * @param event L'evento di change emesso dallo Ion Select.\r\n     */\r\n    private setYearIndex(event: CustomEvent) {\r\n        const optionValue = event.detail.value;\r\n\r\n        if (this.yearIndex !== -1) {\r\n            this.lessonsForm.controls.prof.reset();\r\n            this.lessonsForm.controls.term.reset();\r\n            this.profIndex = -1;\r\n        }\r\n\r\n        if (optionValue !== '') {\r\n            this.yearIndex = optionValue.index;\r\n\r\n            const activeYear = this.lessonsForm.value.year.value;\r\n            this.lessonsService.getLessonsProfOptions(activeYear)\r\n                .subscribe((res) => {\r\n                    this.profOptions = res;\r\n                })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Imposta l'indice relativo al Docente di riferimento.\r\n     * \r\n     * @param event L'evento di change emesso dallo Ion Select.\r\n     */\r\n    private setProfIndex(event: CustomEvent) {\r\n        const optionValue = event.detail.value;\r\n\r\n        if (this.profIndex !== -1) {\r\n            this.lessonsForm.controls.term.reset();\r\n        }\r\n\r\n        if (optionValue !== '') {\r\n            this.profIndex = optionValue.index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recupera il calendario delle lezioni sulla base dell'Anno Accademico,\r\n     * del Docente e del Periodo Didattico di riferimento.\r\n     */\r\n    private getScheduler() {\r\n        this.lessonsService.getLessonsByProf(\r\n            this.lessonsForm.value.year.value,\r\n            this.lessonsForm.value.prof.value,\r\n            this.lessonsForm.value.term.value,\r\n        ).subscribe(\r\n            (scheduler: Scheduler) => {\r\n                this.scheduler = scheduler;\r\n                this.lessonsSet = new Set(Object.keys(scheduler.legend));\r\n\r\n                setTimeout(() => {\r\n                    this.activeIndex++;\r\n                    this.slides.slideTo(this.activeIndex);\r\n                }, 300);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Restituisce l'orario delle lezioni.\r\n     */\r\n    private getSchedule() {\r\n        return this.scheduler.schedule;\r\n    }\r\n\r\n    /**\r\n     * Restituisce la legenda dei corsi presenti nell'orario delle lezioni.\r\n     */\r\n    private getLegend() {\r\n        return this.scheduler.legend;\r\n    }\r\n\r\n    /**\r\n     * Restituisce le lezioni sulla base del filtro applicato dall'utente.\r\n     * \r\n     * @param lessons Le lezioni relative ad un certo giorno della settimana.\r\n     */\r\n    private getLessons(lessons: Lesson[]) {\r\n        return lessons\r\n            .filter((lesson: Lesson) => this.lessonsSet.has(lesson.teachingCode));\r\n    }\r\n\r\n    /**\r\n     * Permette di ottenere il giorno della settimana associato al relativo indice intero. \r\n     * \r\n     * @param dayIndex L'indice intero che identifica il giorno della settimana. \r\n     */\r\n    private getDay(dayIndex: number) {\r\n        return this.daysLabels[dayIndex];\r\n    }\r\n\r\n    /**\r\n     * Mostra un modale per poter effettuare un filtraggio attraverso cui selezionare\r\n     * i corsi di cui si intende visualizzare le lezioni.\r\n     * \r\n     * @param courses Rappresenta la legenda dei corsi.\r\n     * @param checkedSet Rappresenta un Set contenente i codici dei corsi di cui si intende\r\n     * visualizzarne le lezioni.\r\n     * @param confirmCallback Rappresenta una callback che verrà invocata durante la chiusura\r\n     * del modale.\r\n     */\r\n    private async presentCourseFilterModal() {\r\n        const modal = await this.modalController.create({\r\n            component: CourseFilterModalComponent,\r\n            componentProps: {\r\n                courses: this.scheduler.legend,\r\n                checkedSet: this.lessonsSet,\r\n                confirmCallback: this.updateSetCallback\r\n            },\r\n            cssClass: 'app-modal',\r\n        });\r\n\r\n        return await modal.present();\r\n    }\r\n\r\n    /**\r\n     * Mostra un modale per la selezione del docente.\r\n     * \r\n     * @param select Lo IonSelect a cui assegnare il valore di ritorno del modale.\r\n     */\r\n    private async presentProfSearchModal(select: IonSelect) {\r\n        const modal = await this.modalController.create({\r\n            component: SearchModalComponent,\r\n            componentProps: {\r\n                options: this.profOptions.map((prof: any) => {\r\n                    return {\r\n                        label: prof.label,\r\n                        value: prof.valore\r\n                    };\r\n                }),\r\n                title: 'Seleziona'\r\n            },\r\n            cssClass: 'app-modal'\r\n        });\r\n\r\n        modal.onWillDismiss().then((modal: any) => {\r\n            if (modal.data) {\r\n                const value = modal.data;\r\n                const index = this.profOptions.findIndex((prof: any) => prof.valore === value);\r\n                \r\n                select.value = {\r\n                    index: index,\r\n                    value: value\r\n                };\r\n            }\r\n        });\r\n\r\n        await modal.present();\r\n    }\r\n\r\n    /**\r\n     * Permette di aggiornare il Set dei corsi di cui si intende visualizzarne le lezioni.\r\n     * \r\n     * @param newSet Indica il nuovo Set. \r\n     */\r\n    private updateSetCallback(newSet: Set<string>) {\r\n        this.lessonsSet = newSet;\r\n        // Aggiornamento altezza slide.\r\n        setTimeout(() => { this.slides.update() }, 300);\r\n    }\r\n\r\n    /**\r\n     * Mostra un modale per poter visualizzare i dettagli di una lezione.\r\n     * \r\n     * @param lesson Indica la lezione di riferimento.\r\n     */\r\n    private async presentLessonModal(lesson: Lesson) {\r\n        const modal = await this.modalController.create({\r\n            component: LessonModalComponent,\r\n            componentProps: {\r\n                lesson: lesson\r\n            },\r\n            cssClass: 'app-modal'\r\n        })\r\n\r\n        return await modal.present();\r\n    }\r\n\r\n}\r\n","export default \"ion-slide:first-child ion-item::part(native) {\\n  align-items: flex-start;\\n  flex-direction: column;\\n}\\nion-slide:first-child ion-label {\\n  transform: scale(1);\\n  font-size: 16px;\\n  font-weight: var(--ion-font-weight-semibold);\\n}\\nion-slide form {\\n  width: 100%;\\n}\\n.app-list {\\n  margin-bottom: 30px;\\n}\\n.app-list ion-item span {\\n  font-size: 14px;\\n}\\n.app-list ion-select {\\n  padding: 0;\\n  font-size: 14px;\\n}\\n.app-list ion-select::part(placeholder) {\\n  color: var(--ion-color-unisa-base);\\n  opacity: 1;\\n}\\n.app-list ion-select::part(icon) {\\n  display: none;\\n}\\n.app-list ion-datetime {\\n  padding: 0;\\n  color: var(--ion-color-unisa-base);\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxhZ2VuZGF3ZWIucGFnZS5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGxlc3NvbnMtcHJvZi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFUTtFQUNJLHVCQUFBO0VBQ0Esc0JBQUE7QUNEWjtBRElRO0VBQ0ksbUJBQUE7RUFDQSxlQUFBO0VBQ0EsNENBQUE7QUNGWjtBRE1JO0VBQ0ksV0FBQTtBQ0pSO0FEUUE7RUFDSSxtQkFBQTtBQ0xKO0FET0k7RUFDSSxlQUFBO0FDTFI7QURRSTtFQUNJLFVBQUE7RUFDQSxlQUFBO0FDTlI7QURRUTtFQUNJLGtDQUFBO0VBQ0EsVUFBQTtBQ05aO0FEU1E7RUFDSSxhQUFBO0FDUFo7QURXSTtFQUNJLFVBQUE7RUFDQSxrQ0FBQTtFQUNBLGVBQUE7QUNUUiIsImZpbGUiOiJsZXNzb25zLXByb2YuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tc2xpZGUge1xyXG4gICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgaW9uLWl0ZW06OnBhcnQobmF0aXZlKSB7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaW9uLWxhYmVsIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogdmFyKC0taW9uLWZvbnQtd2VpZ2h0LXNlbWlib2xkKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZm9ybSB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5hcHAtbGlzdCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG5cclxuICAgIGlvbi1pdGVtIHNwYW4ge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIH1cclxuXHJcbiAgICBpb24tc2VsZWN0IHtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuXHJcbiAgICAgICAgJjo6cGFydChwbGFjZWhvbGRlcikge1xyXG4gICAgICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXVuaXNhLWJhc2UpO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjo6cGFydChpY29uKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlvbi1kYXRldGltZSB7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXVuaXNhLWJhc2UpO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIH1cclxufVxyXG4iLCJpb24tc2xpZGU6Zmlyc3QtY2hpbGQgaW9uLWl0ZW06OnBhcnQobmF0aXZlKSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuaW9uLXNsaWRlOmZpcnN0LWNoaWxkIGlvbi1sYWJlbCB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWlvbi1mb250LXdlaWdodC1zZW1pYm9sZCk7XG59XG5pb24tc2xpZGUgZm9ybSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYXBwLWxpc3Qge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuLmFwcC1saXN0IGlvbi1pdGVtIHNwYW4ge1xuICBmb250LXNpemU6IDE0cHg7XG59XG4uYXBwLWxpc3QgaW9uLXNlbGVjdCB7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5hcHAtbGlzdCBpb24tc2VsZWN0OjpwYXJ0KHBsYWNlaG9sZGVyKSB7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItdW5pc2EtYmFzZSk7XG4gIG9wYWNpdHk6IDE7XG59XG4uYXBwLWxpc3QgaW9uLXNlbGVjdDo6cGFydChpY29uKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uYXBwLWxpc3QgaW9uLWRhdGV0aW1lIHtcbiAgcGFkZGluZzogMDtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci11bmlzYS1iYXNlKTtcbiAgZm9udC1zaXplOiAxNHB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-lessons',\r\n    templateUrl: './lessons.page.html',\r\n    styleUrls: ['./lessons.page.scss'],\r\n})\r\nexport class LessonsPage implements OnInit {\r\n\r\n    private searchBy: string;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute\r\n    ) {\r\n        this.searchBy = 'course';\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.queryParams.subscribe(params => {\r\n            if (params['searchBy']) {\r\n                this.searchBy = params['searchBy'];\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"<app-refresher [refreshCallback]=\\\"initOperations\\\"></app-refresher>\\r\\n<div class=\\\"flex flex-direction-column\\\">\\r\\n    <app-header>\\r\\n        <ion-toolbar>\\r\\n            <div class=\\\"flex flex-direction-column\\\">\\r\\n                <ion-title class=\\\"page-title\\\">Lezioni</ion-title>\\r\\n                <ion-title class=\\\"page-subtitle\\\">Docente</ion-title>\\r\\n            </div>\\r\\n            <ion-buttons slot=\\\"end\\\">\\r\\n                <ion-button\\r\\n                    class=\\\"ion-no-margin\\\"\\r\\n                    [disabled]=\\\"!scheduler\\\"\\r\\n                    (click)=\\\"presentCourseFilterModal()\\\"\\r\\n                >\\r\\n                    <i class=\\\"fas fa-eye page-title-icon\\\"></i>\\r\\n                </ion-button>\\r\\n            </ion-buttons>\\r\\n        </ion-toolbar>\\r\\n        <ion-toolbar class=\\\"segment-toolbar\\\">\\r\\n            <ion-segment\\r\\n                [value]=\\\"activeIndex\\\"\\r\\n                (ionChange)=\\\"slideTo($event)\\\"\\r\\n                swipeGesture=\\\"false\\\"\\r\\n            >\\r\\n                <ion-segment-button\\r\\n                    *ngFor=\\\"let label of labels; index as i\\\"\\r\\n                    [value]=\\\"i\\\"\\r\\n                >\\r\\n                    <ion-label>{{label}}</ion-label>\\r\\n                </ion-segment-button>\\r\\n            </ion-segment>\\r\\n        </ion-toolbar>\\r\\n    </app-header>\\r\\n    <div class=\\\"page-main\\\">\\r\\n        <ion-slides\\r\\n            *ngIf=\\\"isReady\\\"\\r\\n            (ionSlideWillChange)=\\\"setActiveIndex()\\\"\\r\\n            [options]=\\\"slideOpts\\\"\\r\\n        >\\r\\n            <ion-slide>\\r\\n                <form\\r\\n                    [formGroup]=\\\"lessonsForm\\\"\\r\\n                    (submit)=\\\"getScheduler()\\\"\\r\\n                >\\r\\n                    <ion-list class=\\\"app-list\\\">\\r\\n                        <ion-item>\\r\\n                            <ion-label>\\r\\n                                <h3>Anno accademico</h3>\\r\\n                            </ion-label>\\r\\n                            <ion-select\\r\\n                                cancelText=\\\"Cancella\\\"\\r\\n                                formControlName=\\\"year\\\"\\r\\n                                interface=\\\"action-sheet\\\"\\r\\n                                placeholder=\\\"Seleziona\\\"\\r\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\r\\n                                (ionChange)=\\\"setYearIndex($event)\\\"\\r\\n                            >\\r\\n                                <ion-select-option\\r\\n                                    *ngFor=\\\"let year of getYears() | keyvalue: descSort; index as i\\\"\\r\\n                                    [value]=\\\"{index: i, value: year.value.valore}\\\"\\r\\n                                >\\r\\n                                    {{year.value.label}}\\r\\n                                </ion-select-option>\\r\\n                            </ion-select>\\r\\n                        </ion-item>\\r\\n                        <ion-item\\r\\n                            [disabled]=\\\"yearIndex === -1\\\"\\r\\n                            (click)=\\\"presentProfSearchModal(profSelect)\\\"\\r\\n                            (onChange)=\\\"prova($event)\\\"\\r\\n                        >\\r\\n                            <ion-label>\\r\\n                                <h3>Docente</h3>\\r\\n                            </ion-label>\\r\\n                            <span>{{profSelect.value ? profOptions[profSelect.value.index].label : 'Seleziona'}}</span>\\r\\n                            <ion-select\\r\\n                                #profSelect\\r\\n                                hidden=\\\"true\\\"\\r\\n                                cancelText=\\\"Cancella\\\"\\r\\n                                formControlName=\\\"prof\\\"\\r\\n                                placeholder=\\\"Seleziona\\\"\\r\\n                                interface=\\\"action-sheet\\\"\\r\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\r\\n                                (ionChange)=\\\"setProfIndex($event)\\\"\\r\\n                            >\\r\\n                                <ion-select-option\\r\\n                                    *ngFor=\\\"let prof of getProfs(); index as i\\\"\\r\\n                                    [value]=\\\"{index: i, value: prof.valore}\\\"\\r\\n                                >\\r\\n                                    {{prof.label}}\\r\\n                                </ion-select-option>\\r\\n                            </ion-select>\\r\\n\\r\\n                        </ion-item>\\r\\n                        <ion-item [disabled]=\\\"profIndex === -1\\\">\\r\\n                            <ion-label>\\r\\n                                <h3>Periodo Didattico</h3>\\r\\n                            </ion-label>\\r\\n                            <ion-select\\r\\n                                cancelText=\\\"Cancella\\\"\\r\\n                                formControlName=\\\"term\\\"\\r\\n                                placeholder=\\\"Seleziona\\\"\\r\\n                                interface=\\\"action-sheet\\\"\\r\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\r\\n                            >\\r\\n                                <ion-select-option\\r\\n                                    *ngFor=\\\"let term of getTerms(); index as i\\\"\\r\\n                                    [value]=\\\"{index: i, value: term.valore}\\\"\\r\\n                                >\\r\\n                                    {{term.label}}\\r\\n                                </ion-select-option>\\r\\n                            </ion-select>\\r\\n                        </ion-item>\\r\\n                    </ion-list>\\r\\n                    <ion-button\\r\\n                        class=\\\"form-submit form-submit--button\\\"\\r\\n                        type=\\\"submit\\\"\\r\\n                        [disabled]=\\\"!lessonsForm.valid\\\"\\r\\n                    >\\r\\n                        Cerca\\r\\n                    </ion-button>\\r\\n                </form>\\r\\n            </ion-slide>\\r\\n            <ion-slide>\\r\\n                <ion-list\\r\\n                    class=\\\"app-list\\\"\\r\\n                    *ngIf=\\\"scheduler\\\"\\r\\n                >\\r\\n                    <ng-container *ngFor=\\\"let schedule of getSchedule() | keyvalue\\\">\\r\\n                        <ng-container *ngIf=\\\"getLessons(schedule.value); let lessons\\\">\\r\\n                            <ion-list-header *ngIf=\\\"lessons.length > 0\\\">\\r\\n                                <ion-label>{{getDay(schedule.key)}}</ion-label>\\r\\n                            </ion-list-header>\\r\\n                            <ion-item\\r\\n                                *ngFor=\\\"let lesson of lessons\\\"\\r\\n                                (click)=\\\"presentLessonModal(lesson)\\\"\\r\\n                            >\\r\\n                                <ion-label>\\r\\n                                    <h3>{{lesson.name}}</h3>\\r\\n                                    <div>\\r\\n                                        <i class=\\\"far fa-calendar\\\"></i>\\r\\n                                        <span>\\r\\n                                            {{lesson.timeStart}} - {{lesson.timeEnd}}\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <div>\\r\\n                                        <i class=\\\"fas fa-map\\\"></i>\\r\\n                                        <span>{{lesson.room}}</span>\\r\\n                                    </div>\\r\\n                                </ion-label>\\r\\n                            </ion-item>\\r\\n                        </ng-container>\\r\\n                    </ng-container>\\r\\n                    <ion-item *ngIf=\\\"lessonsSet.size === 0\\\">Nessun elemento da mostrare.</ion-item>\\r\\n                </ion-list>\\r\\n                <ion-list\\r\\n                    *ngIf=\\\"!scheduler\\\"\\r\\n                    class=\\\"app-list\\\"\\r\\n                >\\r\\n                    <ion-item>Nessun elemento da mostrare.</ion-item>\\r\\n                </ion-list>\\r\\n            </ion-slide>\\r\\n        </ion-slides>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<app-refresher [refreshCallback]=\\\"initOperations\\\"></app-refresher>\\r\\n<div class=\\\"flex flex-direction-column\\\">\\r\\n    <app-header>\\r\\n        <ion-toolbar>\\r\\n            <div class=\\\"flex flex-direction-column\\\">\\r\\n                <ion-title class=\\\"page-title\\\">Lezioni</ion-title>\\r\\n                <ion-title class=\\\"page-subtitle\\\">Insegnamento</ion-title>\\r\\n            </div>\\r\\n            <ion-buttons slot=\\\"end\\\">\\r\\n                <ion-button\\r\\n                    class=\\\"ion-no-margin\\\"\\r\\n                    [disabled]=\\\"!scheduler\\\"\\r\\n                    (click)=\\\"presentCourseFilterModal()\\\"\\r\\n                >\\r\\n                    <i class=\\\"fas fa-eye page-title-icon\\\"></i>\\r\\n                </ion-button>\\r\\n            </ion-buttons>\\r\\n        </ion-toolbar>\\r\\n        <ion-toolbar class=\\\"segment-toolbar\\\">\\r\\n            <ion-segment\\r\\n                [value]=\\\"activeIndex\\\"\\r\\n                (ionChange)=\\\"slideTo($event)\\\"\\r\\n                swipeGesture=\\\"false\\\"\\r\\n            >\\r\\n                <ion-segment-button\\r\\n                    *ngFor=\\\"let label of labels; index as i\\\"\\r\\n                    [value]=\\\"i\\\"\\r\\n                >\\r\\n                    <ion-label>{{label}}</ion-label>\\r\\n                </ion-segment-button>\\r\\n            </ion-segment>\\r\\n        </ion-toolbar>\\r\\n    </app-header>\\r\\n    <div class=\\\"page-main\\\">\\r\\n        <ion-slides\\r\\n            *ngIf=\\\"isReady\\\"\\r\\n            (ionSlideWillChange)=\\\"setActiveIndex()\\\"\\r\\n            [options]=\\\"slideOpts\\\"\\r\\n        >\\r\\n            <ion-slide>\\r\\n                <form\\r\\n                    [formGroup]=\\\"lessonsForm\\\"\\r\\n                    (submit)=\\\"getScheduler()\\\"\\r\\n                >\\r\\n                    <ion-list class=\\\"app-list\\\">\\r\\n                        <ion-item>\\r\\n                            <ion-label>\\r\\n                                <h3>Anno accademico</h3>\\r\\n                            </ion-label>\\r\\n                            <ion-select\\r\\n                                cancelText=\\\"Cancella\\\"\\r\\n                                formControlName=\\\"year\\\"\\r\\n                                interface=\\\"action-sheet\\\"\\r\\n                                placeholder=\\\"Seleziona\\\"\\r\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\r\\n                                (ionChange)=\\\"setYearIndex($event)\\\"\\r\\n                            >\\r\\n                                <ion-select-option\\r\\n                                    *ngFor=\\\"let year of getYears() | keyvalue: descSort; index as i\\\"\\r\\n                                    [value]=\\\"{index: i, value: year.value.valore}\\\"\\r\\n                                >\\r\\n                                    {{year.value.label}}\\r\\n                                </ion-select-option>\\r\\n                            </ion-select>\\r\\n                        </ion-item>\\r\\n                        <ion-item [disabled]=\\\"yearIndex === -1\\\">\\r\\n                            <ion-label>\\r\\n                                <h3>Corso di studio</h3>\\r\\n                            </ion-label>\\r\\n                            <ion-select\\r\\n                                cancelText=\\\"Cancella\\\"\\r\\n                                formControlName=\\\"course\\\"\\r\\n                                placeholder=\\\"Seleziona\\\"\\r\\n                                interface=\\\"action-sheet\\\"\\r\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\r\\n                                (ionChange)=\\\"setCourseIndex($event)\\\"\\r\\n                            >\\r\\n                                <ion-select-option\\r\\n                                    *ngFor=\\\"let course of getCourses(); index as i\\\"\\r\\n                                    [value]=\\\"{index: i, value: course.valore}\\\"\\r\\n                                >\\r\\n                                    [{{course.valore}}] - {{course.label}}\\r\\n                                </ion-select-option>\\r\\n                            </ion-select>\\r\\n                        </ion-item>\\r\\n                        <ion-item [disabled]=\\\"courseIndex === -1\\\">\\r\\n                            <ion-label>\\r\\n                                <h3>Anno di studio</h3>\\r\\n                            </ion-label>\\r\\n                            <ion-select\\r\\n                                cancelText=\\\"Cancella\\\"\\r\\n                                formControlName=\\\"courseYear\\\"\\r\\n                                placeholder=\\\"Seleziona\\\"\\r\\n                                interface=\\\"action-sheet\\\"\\r\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\r\\n                                (ionChange)=\\\"setCourseYearIndex($event)\\\"\\r\\n                            >\\r\\n                                <ion-select-option\\r\\n                                    *ngFor=\\\"let courseYear of getCourseYears(); index as i\\\"\\r\\n                                    [value]=\\\"{index: i, value: courseYear.valore}\\\"\\r\\n                                >\\r\\n                                    {{courseYear.label}}\\r\\n                                </ion-select-option>\\r\\n                            </ion-select>\\r\\n                        </ion-item>\\r\\n                        <ion-item [disabled]=\\\"courseYearIndex === -1\\\">\\r\\n                            <ion-label>\\r\\n                                <h3>Periodo Didattico</h3>\\r\\n                            </ion-label>\\r\\n                            <ion-select\\r\\n                                cancelText=\\\"Cancella\\\"\\r\\n                                formControlName=\\\"term\\\"\\r\\n                                placeholder=\\\"Seleziona\\\"\\r\\n                                interface=\\\"action-sheet\\\"\\r\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\r\\n                            >\\r\\n                                <ion-select-option\\r\\n                                    *ngFor=\\\"let term of getTerms(); index as i\\\"\\r\\n                                    [value]=\\\"{index: i, value: term.valore}\\\"\\r\\n                                >\\r\\n                                    {{term.label}}\\r\\n                                </ion-select-option>\\r\\n                            </ion-select>\\r\\n                        </ion-item>\\r\\n                    </ion-list>\\r\\n                    <ion-button\\r\\n                        class=\\\"form-submit form-submit--button\\\"\\r\\n                        type=\\\"submit\\\"\\r\\n                        [disabled]=\\\"!lessonsForm.valid\\\"\\r\\n                    >\\r\\n                        Cerca\\r\\n                    </ion-button>\\r\\n                </form>\\r\\n            </ion-slide>\\r\\n            <ion-slide>\\r\\n                <ion-list\\r\\n                    *ngIf=\\\"scheduler\\\"\\r\\n                    class=\\\"app-list\\\"\\r\\n                >\\r\\n                    <ng-container *ngFor=\\\"let schedule of getSchedule() | keyvalue\\\">\\r\\n                        <ng-container *ngIf=\\\"getLessons(schedule.value); let lessons\\\">\\r\\n                            <ion-list-header *ngIf=\\\"lessons.length > 0\\\">\\r\\n                                <ion-label>{{getDay(schedule.key)}}</ion-label>\\r\\n                            </ion-list-header>\\r\\n                            <ion-item\\r\\n                                *ngFor=\\\"let lesson of lessons\\\"\\r\\n                                (click)=\\\"presentLessonModal(lesson)\\\"\\r\\n                            >\\r\\n                                <ion-label>\\r\\n                                    <h3>{{lesson.name}}</h3>\\r\\n                                    <div>\\r\\n                                        <i class=\\\"far fa-calendar\\\"></i>\\r\\n                                        <span>\\r\\n                                            {{lesson.timeStart}} - {{lesson.timeEnd}}\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <div>\\r\\n                                        <i class=\\\"fas fa-map\\\"></i>\\r\\n                                        <span>{{lesson.room}}</span>\\r\\n                                    </div>\\r\\n                                </ion-label>\\r\\n                            </ion-item>\\r\\n                        </ng-container>\\r\\n                    </ng-container>\\r\\n                    <ion-item *ngIf=\\\"lessonsSet.size === 0\\\">Nessun elemento da mostrare.</ion-item>\\r\\n                </ion-list>\\r\\n                <ion-list\\r\\n                    *ngIf=\\\"!scheduler\\\"\\r\\n                    class=\\\"app-list\\\"\\r\\n                >\\r\\n                    <ion-item>Nessun elemento da mostrare.</ion-item>\\r\\n                </ion-list>\\r\\n            </ion-slide>\\r\\n        </ion-slides>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"ion-slide:first-child ion-item::part(native) {\\n  align-items: flex-start;\\n  flex-direction: column;\\n}\\nion-slide:first-child ion-label {\\n  transform: scale(1);\\n  font-size: 16px;\\n  font-weight: var(--ion-font-weight-semibold);\\n}\\nion-slide form {\\n  width: 100%;\\n}\\n.app-list {\\n  margin-bottom: 30px;\\n}\\n.app-list ion-item span {\\n  font-size: 14px;\\n}\\n.app-list ion-select {\\n  padding: 0;\\n  font-size: 14px;\\n}\\n.app-list ion-select::part(placeholder) {\\n  color: var(--ion-color-unisa-base);\\n  opacity: 1;\\n}\\n.app-list ion-select::part(icon) {\\n  display: none;\\n}\\n.app-list ion-datetime {\\n  padding: 0;\\n  color: var(--ion-color-unisa-base);\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxhZ2VuZGF3ZWIucGFnZS5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGxlc3NvbnMtY291cnNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVRO0VBQ0ksdUJBQUE7RUFDQSxzQkFBQTtBQ0RaO0FESVE7RUFDSSxtQkFBQTtFQUNBLGVBQUE7RUFDQSw0Q0FBQTtBQ0ZaO0FETUk7RUFDSSxXQUFBO0FDSlI7QURRQTtFQUNJLG1CQUFBO0FDTEo7QURPSTtFQUNJLGVBQUE7QUNMUjtBRFFJO0VBQ0ksVUFBQTtFQUNBLGVBQUE7QUNOUjtBRFFRO0VBQ0ksa0NBQUE7RUFDQSxVQUFBO0FDTlo7QURTUTtFQUNJLGFBQUE7QUNQWjtBRFdJO0VBQ0ksVUFBQTtFQUNBLGtDQUFBO0VBQ0EsZUFBQTtBQ1RSIiwiZmlsZSI6Imxlc3NvbnMtY291cnNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXNsaWRlIHtcclxuICAgICY6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgIGlvbi1pdGVtOjpwYXJ0KG5hdGl2ZSkge1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlvbi1sYWJlbCB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IHZhcigtLWlvbi1mb250LXdlaWdodC1zZW1pYm9sZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZvcm0ge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG59XHJcblxyXG4uYXBwLWxpc3Qge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuXHJcbiAgICBpb24taXRlbSBzcGFuIHtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB9XHJcblxyXG4gICAgaW9uLXNlbGVjdCB7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcblxyXG4gICAgICAgICY6OnBhcnQocGxhY2Vob2xkZXIpIHtcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci11bmlzYS1iYXNlKTtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6OnBhcnQoaWNvbikge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpb24tZGF0ZXRpbWUge1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci11bmlzYS1iYXNlKTtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB9XHJcbn1cclxuIiwiaW9uLXNsaWRlOmZpcnN0LWNoaWxkIGlvbi1pdGVtOjpwYXJ0KG5hdGl2ZSkge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbmlvbi1zbGlkZTpmaXJzdC1jaGlsZCBpb24tbGFiZWwge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1pb24tZm9udC13ZWlnaHQtc2VtaWJvbGQpO1xufVxuaW9uLXNsaWRlIGZvcm0ge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmFwcC1saXN0IHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cbi5hcHAtbGlzdCBpb24taXRlbSBzcGFuIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLmFwcC1saXN0IGlvbi1zZWxlY3Qge1xuICBwYWRkaW5nOiAwO1xuICBmb250LXNpemU6IDE0cHg7XG59XG4uYXBwLWxpc3QgaW9uLXNlbGVjdDo6cGFydChwbGFjZWhvbGRlcikge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXVuaXNhLWJhc2UpO1xuICBvcGFjaXR5OiAxO1xufVxuLmFwcC1saXN0IGlvbi1zZWxlY3Q6OnBhcnQoaWNvbikge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmFwcC1saXN0IGlvbi1kYXRldGltZSB7XG4gIHBhZGRpbmc6IDA7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItdW5pc2EtYmFzZSk7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn0iXX0= */\";","import { KeyValue } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { IonSlides, IonSegment, ModalController } from '@ionic/angular';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Lesson } from 'src/app/interfaces/lesson';\r\nimport { Scheduler } from 'src/app/interfaces/scheduler';\r\nimport { LessonModalComponent } from '../lesson-modal/lesson-modal.component';\r\nimport { CourseFilterModalComponent } from '../course-filter-modal/course-filter-modal.component';\r\nimport { LessonsService } from 'src/app/services/agendaweb/lessons/lessons.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-lessons-course',\r\n    templateUrl: './lessons-course.component.html',\r\n    styleUrls: ['./lessons-course.component.scss'],\r\n})\r\nexport class LessonsCourseComponent implements OnInit {\r\n\r\n    @ViewChild(IonSlides) slides: IonSlides;\r\n    @ViewChild(IonSegment) segment: IonSegment;\r\n\r\n    private readonly customActionSheetOptions: any = {\r\n        cssClass: 'form-select-action-sheet',\r\n        header: 'Seleziona',\r\n        mode: 'md'\r\n    };\r\n\r\n    private readonly slideOpts: any = {\r\n        autoHeight: true,\r\n        spaceBetween: 20\r\n    };\r\n\r\n    private readonly daysLabels: any = {\r\n        0: 'Lunedì',\r\n        1: 'Martedì',\r\n        2: 'Mercoledì',\r\n        3: 'Giovedì',\r\n        4: 'Venerdì'\r\n    };\r\n\r\n    private labels: String[];\r\n    private activeIndex: number;\r\n    private isReady: boolean;\r\n    private lessonsForm: FormGroup;\r\n    private scheduler: Scheduler;\r\n    private lessonsSet: Set<string>;\r\n    private yearIndex: number;\r\n    private courseIndex: number;\r\n    private courseYearIndex: number;\r\n    private yearOptions: any;\r\n    private courseOptions: any;\r\n    private courseYearOptions: any;\r\n\r\n    constructor(\r\n        private lessonsService: LessonsService,\r\n        private formBuilder: FormBuilder,\r\n        private modalController: ModalController\r\n    ) {\r\n        this.labels = ['Ricerca', 'Riepilogo'];\r\n        this.activeIndex = 0;\r\n        this.isReady = false;\r\n\r\n        // Set dei corsi di cui visualizzare le lezioni.\r\n        this.lessonsSet = new Set();\r\n\r\n        // Indici per le informazioni di riferimento.\r\n        this.yearIndex = -1;\r\n        this.courseIndex = -1;\r\n        this.courseYearIndex = -1;\r\n\r\n        // Opzioni select.\r\n        this.yearOptions = {};\r\n        this.courseOptions = [];\r\n        this.courseYearOptions = [];\r\n\r\n        this.lessonsForm = this.formBuilder.group({\r\n            year: new FormControl('', Validators.required),\r\n            course: new FormControl('', Validators.required),\r\n            courseYear: new FormControl('', Validators.required),\r\n            term: new FormControl('', Validators.required)\r\n        });\r\n\r\n        this.initOperations = this.initOperations.bind(this);\r\n        this.updateSetCallback = this.updateSetCallback.bind(this);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initOperations();\r\n    }\r\n\r\n    /**\r\n     * Permette di inizializzare il componente e di ottenere le opzioni \r\n     * relative al select per l'Anno Accademico.\r\n     */\r\n    private initOperations() {\r\n        return this.lessonsService.getLessonsYearOptions()\r\n            .subscribe((res: any) => {\r\n                // Reset indici per le informazioni di riferimento.\r\n                this.yearIndex = -1;\r\n                this.courseIndex = -1;\r\n                this.courseYearIndex = -1;\r\n\r\n                // Reset opzioni select e form.\r\n                this.yearOptions = {};\r\n                this.courseOptions = [];\r\n                this.courseYearOptions = [];\r\n                this.lessonsForm.reset();\r\n\r\n                // Aggiornamento dati.\r\n                this.yearOptions = res;\r\n                this.isReady = true;\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Aggiorna la slide alla pressione in base allo specifico Segment Button.\r\n     * \r\n     * @param event L'evento associato al Segment Button.\r\n     */\r\n    private async slideTo(event: CustomEvent) {\r\n        const target = event.target as HTMLIonSegmentButtonElement;\r\n        const value = parseInt(target.value);\r\n\r\n        await this.slides.slideTo(value);\r\n        this.activeIndex = value;\r\n    }\r\n\r\n    /**\r\n     * Aggiorna il Segment Button sulla base dell'indice corrente della slide.\r\n     */\r\n    private async setActiveIndex() {\r\n        const index = await this.slides.getActiveIndex();\r\n\r\n        if (index !== this.activeIndex) {\r\n            const button = this.segment['el'].children[index] as HTMLElement;\r\n            button.click();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Effettua l'ordinamento decrescente delle opzioni relative all'Anno Accademico.\r\n     * \r\n     * @param a E' la prima coppia <chiave, valore>. La chiave è una stringa che \r\n     * rappresenta l'Anno Accademico mentre il valore è l'oggetto opzione. \r\n     * @param b E' la seconda coppia <chiave, valore>. La chiave è una stringa che\r\n     * rappresenta l'Anno Accademico mentre il valore è l'oggetto opzione.\r\n     */\r\n    private descSort(a: KeyValue<string, any>, b: KeyValue<string, any>) {\r\n        return b.key.localeCompare(a.key);\r\n    }\r\n\r\n    /**\r\n     * Restituisce le opzioni del select relative all'Anno Accademico.\r\n     */\r\n    private getYears(): any {\r\n        return this.yearOptions;\r\n    }\r\n\r\n    /**\r\n     * Restituisce le opzioni del select relative al Corso di Studio.\r\n     */\r\n    private getCourses(): any {\r\n        if (this.yearIndex === -1) {\r\n            return [];\r\n        }\r\n\r\n        return this.courseOptions;\r\n    }\r\n\r\n    /**\r\n     * Restituisce le opzioni del select relative all'Anno di Studio.\r\n     */\r\n    private getCourseYears(): any {\r\n        if (this.courseIndex === -1) {\r\n            return [];\r\n        }\r\n\r\n        return this.courseYearOptions;\r\n    }\r\n\r\n    /**\r\n     * Restituisce le opzioni del select relative al Periodo Didattico.\r\n     */\r\n    private getTerms() {\r\n        if (this.courseYearIndex === -1) {\r\n            return [];\r\n        }\r\n\r\n        return this.courseOptions[this.courseIndex].pub_periodi;\r\n    }\r\n\r\n    /**\r\n     * Imposta l'indice relativo all'Anno Accademico di riferimento.\r\n     * \r\n     * @param event L'evento di change emesso dallo Ion Select.\r\n     */\r\n    private setYearIndex(event: CustomEvent) {\r\n        const optionValue = event.detail.value;\r\n\r\n        if (this.yearIndex !== -1) {\r\n            this.lessonsForm.controls.course.reset();\r\n            this.lessonsForm.controls.courseYear.reset();\r\n            this.lessonsForm.controls.term.reset();\r\n            this.courseIndex = -1;\r\n            this.courseYearIndex = -1;\r\n        }\r\n\r\n        if (optionValue !== '') {\r\n            this.yearIndex = optionValue.index;\r\n\r\n            const activeYear = this.lessonsForm.value.year.value;\r\n            this.lessonsService.getLessonsCourseOptions(activeYear)\r\n                .subscribe((res) => {\r\n                    this.courseOptions = res;\r\n                })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Imposta l'indice relativo al Corso di Stuio di riferimento.\r\n     * \r\n     * @param event L'evento di change emesso dallo Ion Select.\r\n     */\r\n    private setCourseIndex(event: CustomEvent) {\r\n        const optionValue = event.detail.value;\r\n\r\n        if (this.courseIndex !== -1) {\r\n            this.lessonsForm.controls.courseYear.reset();\r\n            this.lessonsForm.controls.term.reset();\r\n            this.courseYearIndex = -1;\r\n        }\r\n\r\n        if (optionValue !== '') {\r\n            this.courseIndex = optionValue.index;\r\n\r\n            const activeYear = this.lessonsForm.value.year.value;\r\n            const activeCourse = this.lessonsForm.value.course.value;\r\n            this.lessonsService.getLessonsCourseYearsOptions(activeYear, activeCourse)\r\n                .subscribe((res: any) => {\r\n                    this.courseYearOptions = res;\r\n                })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Imposta l'indice relativo all'Anno di Studio di riferimento.\r\n     * \r\n     * @param event L'evento di change emesso dallo Ion Select.\r\n     */\r\n    private setCourseYearIndex(event: CustomEvent) {\r\n        const optionValue = event.detail.value;\r\n\r\n        if (this.courseYearIndex !== -1) {\r\n            this.lessonsForm.controls.term.reset();\r\n        }\r\n\r\n        if (optionValue !== '') {\r\n            this.courseYearIndex = optionValue.index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recupera il calendario delle lezioni sulla base dell'Anno Accademico,\r\n     * del Corso di Studio, dell'Anno di Studio e del Periodo Didattico di riferimento.\r\n     */\r\n    private getScheduler() {\r\n        this.lessonsService.getLessonsByCourse(\r\n            this.lessonsForm.value.year.value,\r\n            this.lessonsForm.value.course.value,\r\n            this.lessonsForm.value.courseYear.value,\r\n            this.lessonsForm.value.term.value,\r\n        ).subscribe(\r\n            (scheduler: Scheduler) => {\r\n                this.scheduler = scheduler;\r\n                this.lessonsSet = new Set(Object.keys(scheduler.legend));\r\n\r\n                setTimeout(() => {\r\n                    this.activeIndex++;\r\n                    this.slides.slideTo(this.activeIndex);\r\n                }, 300);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Restituisce l'orario delle lezioni.\r\n     */\r\n    private getSchedule() {\r\n        return this.scheduler.schedule;\r\n    }\r\n\r\n    /**\r\n     * Restituisce la legenda dei corsi presenti nell'orario delle lezioni.\r\n     */\r\n    private getLegend() {\r\n        return this.scheduler.legend;\r\n    }\r\n\r\n    /**\r\n     * Restituisce le lezioni sulla base del filtro applicato dall'utente.\r\n     * \r\n     * @param lessons Le lezioni relative ad un certo giorno della settimana.\r\n     */\r\n    private getLessons(lessons: Lesson[]) {\r\n        return lessons\r\n            .filter((lesson: Lesson) => this.lessonsSet.has(lesson.teachingCode));\r\n    }\r\n\r\n    /**\r\n     * Permette di ottenere il giorno della settimana associato al relativo indice intero. \r\n     * \r\n     * @param dayIndex L'indice intero che identifica il giorno della settimana. \r\n     */\r\n    private getDay(dayIndex: number) {\r\n        return this.daysLabels[dayIndex];\r\n    }\r\n\r\n    /**\r\n     * Mostra un modale per poter effettuare un filtraggio attraverso cui selezionare\r\n     * i corsi di cui si intende visualizzare le lezioni.\r\n     * \r\n     * @param courses Rappresenta la legenda dei corsi.\r\n     * @param checkedSet Rappresenta un Set contenente i codici dei corsi di cui si intende\r\n     * visualizzarne le lezioni.\r\n     * @param confirmCallback Rappresenta una callback che verrà invocata durante la chiusura\r\n     * del modale.\r\n     */\r\n    private async presentCourseFilterModal() {\r\n        const modal = await this.modalController.create({\r\n            component: CourseFilterModalComponent,\r\n            componentProps: {\r\n                courses: this.scheduler.legend,\r\n                checkedSet: this.lessonsSet,\r\n                confirmCallback: this.updateSetCallback\r\n            },\r\n            cssClass: 'app-modal',\r\n        });\r\n\r\n        return await modal.present();\r\n    }\r\n\r\n    /**\r\n     * Permette di aggiornare il Set dei corsi di cui si intende visualizzarne le lezioni.\r\n     * \r\n     * @param newSet Indica il nuovo Set. \r\n     */\r\n    private updateSetCallback(newSet: Set<string>) {\r\n        this.lessonsSet = newSet;\r\n        // Aggiornamento altezza slide.\r\n        setTimeout(() => { this.slides.update() }, 300);\r\n    }\r\n\r\n    /**\r\n     * Mostra un modale per poter visualizzare i dettagli di una lezione.\r\n     * \r\n     * @param lesson Indica la lezione di riferimento.\r\n     */\r\n    private async presentLessonModal(lesson: Lesson) {\r\n        const modal = await this.modalController.create({\r\n            component: LessonModalComponent,\r\n            componentProps: {\r\n                lesson: lesson\r\n            },\r\n            cssClass: 'app-modal'\r\n        })\r\n\r\n        return await modal.present();\r\n    }\r\n\r\n}\r\n","import { NavParams } from '@ionic/angular';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Lesson } from 'src/app/interfaces/lesson';\r\n\r\n@Component({\r\n    selector: 'app-lesson-modal',\r\n    templateUrl: './lesson-modal.component.html',\r\n    styleUrls: ['./lesson-modal.component.scss'],\r\n})\r\nexport class LessonModalComponent implements OnInit {\r\n\r\n    private lesson: Lesson;\r\n\r\n    private readonly daysLabels: any = {\r\n        0: 'Lunedì',\r\n        1: 'Martedì',\r\n        2: 'Mercoledì',\r\n        3: 'Giovedì',\r\n        4: 'Venerdì'\r\n    };\r\n\r\n    constructor(\r\n        private navParams: NavParams\r\n    ) {\r\n        this.lesson = this.navParams.get('lesson');\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    private getDay() {\r\n        return this.daysLabels[this.lesson.day];\r\n    }\r\n\r\n}\r\n","export default \"<app-modal title=\\\"Dettagli lezione\\\">\\r\\n    <ion-list>\\r\\n        <ion-item class=\\\"name\\\">\\r\\n            <ion-thumbnail slot=\\\"start\\\">\\r\\n                <i class=\\\"fas fa-book\\\"></i>\\r\\n            </ion-thumbnail>\\r\\n            <ion-label>\\r\\n                <h3>{{lesson.name}}</h3>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"profs\\\">\\r\\n            <ion-thumbnail slot=\\\"start\\\">\\r\\n                <i class=\\\"fas fa-user-tie\\\"></i>\\r\\n            </ion-thumbnail>\\r\\n            <div class=\\\"flex flex-direction-column\\\">\\r\\n                <ion-label *ngFor=\\\"let prof of lesson.profs\\\">\\r\\n                    <h3>\\r\\n                        {{prof.firstname}} {{prof.lastname}}\\r\\n                    </h3>\\r\\n                    <p>{{prof.mail}}</p>\\r\\n                </ion-label>\\r\\n            </div>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"date\\\">\\r\\n            <ion-thumbnail slot=\\\"start\\\">\\r\\n                <i class=\\\"fas fa-calendar-alt\\\"></i>\\r\\n            </ion-thumbnail>\\r\\n            <ion-label>\\r\\n                <h3>{{getDay()}}</h3>\\r\\n                <p>\\r\\n                    {{lesson.timeStart}} - {{lesson.timeEnd}}\\r\\n                </p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"room\\\">\\r\\n            <ion-thumbnail slot=\\\"start\\\">\\r\\n                <i class=\\\"fas fa-map\\\"></i>\\r\\n            </ion-thumbnail>\\r\\n            <ion-label>\\r\\n                <h3>{{lesson.room}}</h3>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"courses\\\">\\r\\n            <ion-thumbnail slot=\\\"start\\\">\\r\\n                <i class=\\\"fas fa-graduation-cap\\\"></i>\\r\\n            </ion-thumbnail>\\r\\n            <ion-label>\\r\\n                <h3 *ngFor=\\\"let course of lesson.courses\\\">{{course}}</h3>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</app-modal>\\r\\n\";","export default \"ion-item {\\n  margin-bottom: 30px;\\n}\\nion-item:last-child {\\n  margin-bottom: 0;\\n}\\nion-item.name ion-thumbnail {\\n  background: #eaf7ff;\\n}\\nion-item.profs ion-thumbnail {\\n  background: #FFF4F4;\\n}\\nion-item.date ion-thumbnail {\\n  background: #FAF8E9;\\n}\\nion-item.room ion-thumbnail {\\n  background: #FFF1FF;\\n}\\nion-item.courses ion-thumbnail {\\n  background: #E4F6E5;\\n}\\nion-item ion-thumbnail {\\n  margin-right: 15px;\\n  border-radius: 15px;\\n}\\nion-item ion-thumbnail i {\\n  color: rgba(0, 0, 0, 0.2);\\n  mix-blend-mode: color-burn;\\n}\\nion-item ion-label h3 {\\n  font-size: 15px;\\n  font-weight: var(--ion-font-weight-medium);\\n}\\nion-item ion-label p {\\n  color: var(--ion-color-unisa-base);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxsZXNzb24tbW9kYWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtBQUNKO0FBQ0k7RUFDSSxnQkFBQTtBQUNSO0FBRUk7RUFDSSxtQkFBQTtBQUFSO0FBR0k7RUFDSSxtQkFBQTtBQURSO0FBSUk7RUFDSSxtQkFBQTtBQUZSO0FBS0k7RUFDSSxtQkFBQTtBQUhSO0FBTUk7RUFDSSxtQkFBQTtBQUpSO0FBT0k7RUFDSSxrQkFBQTtFQUNBLG1CQUFBO0FBTFI7QUFPUTtFQUNJLHlCQUFBO0VBQ0EsMEJBQUE7QUFMWjtBQVVRO0VBQ0ksZUFBQTtFQUNBLDBDQUFBO0FBUlo7QUFXUTtFQUNJLGtDQUFBO0FBVFoiLCJmaWxlIjoibGVzc29uLW1vZGFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWl0ZW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuXHJcbiAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJi5uYW1lIGlvbi10aHVtYm5haWwge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNlYWY3ZmY7XHJcbiAgICB9XHJcblxyXG4gICAgJi5wcm9mcyBpb24tdGh1bWJuYWlsIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjRkZGNEY0O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmLmRhdGUgaW9uLXRodW1ibmFpbCB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI0ZBRjhFOTtcclxuICAgIH1cclxuXHJcbiAgICAmLnJvb20gaW9uLXRodW1ibmFpbCB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI0ZGRjFGRjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJi5jb3Vyc2VzIGlvbi10aHVtYm5haWwge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNFNEY2RTU7XHJcbiAgICB9XHJcblxyXG4gICAgaW9uLXRodW1ibmFpbCB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcblxyXG4gICAgICAgIGkge1xyXG4gICAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgICAgICAgICBtaXgtYmxlbmQtbW9kZTogY29sb3ItYnVybjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaW9uLWxhYmVsIHtcclxuICAgICAgICBoMyB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IHZhcigtLWlvbi1mb250LXdlaWdodC1tZWRpdW0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItdW5pc2EtYmFzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LessonsPage } from './lessons.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LessonsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LessonsPageRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3Vyc2UtZmlsdGVyLW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LessonsPageRoutingModule } from './lessons-routing.module';\r\n\r\nimport { LessonsPage } from './lessons.page';\r\nimport { UtilityModule } from '../../utility/utility.module';\r\nimport { LessonsCourseComponent } from './components/lessons-course/lessons-course.component';\r\nimport { LessonsProfComponent } from './components/lessons-prof/lessons-prof.component';\r\nimport { CourseFilterModalComponent } from './components/course-filter-modal/course-filter-modal.component';\r\nimport { LessonModalComponent } from './components/lesson-modal/lesson-modal.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    LessonsPageRoutingModule,\r\n    UtilityModule\r\n  ],\r\n  declarations: [\r\n    LessonsPage,\r\n    LessonsCourseComponent,\r\n    LessonsProfComponent,\r\n    CourseFilterModalComponent,\r\n    LessonModalComponent\r\n  ],\r\n  exports: [\r\n    LessonsCourseComponent,\r\n    LessonsProfComponent,\r\n    CourseFilterModalComponent,\r\n  ]\r\n})\r\nexport class LessonsPageModule { }\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Lesson } from 'src/app/interfaces/lesson';\r\nimport { Schedule } from 'src/app/interfaces/schedule';\r\nimport { Scheduler } from 'src/app/interfaces/scheduler';\r\nimport { SessionProf } from 'src/app/interfaces/session-prof';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LessonsService {\r\n\r\n    private readonly base = `${environment.easycourseApi}/AgendaStudenti/`;\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    /**\r\n     * Effettua il parsing della risposta restituendo i dati in formato JSON.\r\n     * \r\n     * @param res La risposta da parsare. \r\n     */\r\n    private parseResponse(res: String): String {\r\n        return JSON.parse(res.split(';')[0]);\r\n    }\r\n\r\n    /**\r\n     * Recupera le combo di filtraggio relative all'opzione 'Anno Accademico', sia per \r\n     * la pagina dei corsi che per la pagina dei docenti.\r\n     */\r\n    getLessonsYearOptions(): Observable<any> {\r\n        return this.http.get(`${this.base}/combo_call_new.php`, {\r\n            params: new HttpParams()\r\n                .set('sw', 'ec_')\r\n                .set('aa', '1')\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Recupera le opzioni di filtraggio relative all'opzione 'Corso di Studio' per la\r\n     * pagina dei corsi.\r\n     * \r\n     * @param year Indica l'Anno Accademico di riferimento.\r\n     */\r\n    getLessonsCourseOptions(year: string): Observable<any> {\r\n        return this.http.get(`${this.base}/combo_call_new.php`, {\r\n            params: new HttpParams()\r\n                .set('sw', 'ec_')\r\n                .set('aa', year)\r\n                .set('page', 'corsi'),\r\n            responseType: 'text'\r\n        }).pipe(\r\n            map((res: any) => {\r\n                return this.parseResponse(res);\r\n            })\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Recupera le opzioni di filtraggio relative all'opzione 'Docente' per la pagina\r\n     * dei docenti.\r\n     * \r\n     * @param year Indica l'Anno Accademico di riferimento. \r\n     */\r\n    getLessonsProfOptions(year: string): Observable<any> {\r\n        return this.http.get(`${this.base}/combo_call_new.php`, {\r\n            params: new HttpParams()\r\n                .set('sw', 'ec_')\r\n                .set('aa', year)\r\n                .set('page', 'docenti')\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Recupera le opzioni di filtraggio relative all'opzione 'Anno di Studio' per la\r\n     * pagina dei corsi.\r\n     * \r\n     * @param year Indica l'Anno Accademico di riferimento. \r\n     * @param course Indica il codice identificativo del Corso di Studio di riferimento.\r\n     */\r\n    getLessonsCourseYearsOptions(year: string, course: string): Observable<any> {\r\n        return this.http.get(`${this.base}/call_redis.php`, {\r\n            params: new HttpParams()\r\n                .set('key', `UNISA_${year}_ec_elenco_anno2_${course}`)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Recupera il Calendario delle Lezioni per Insegnamento.\r\n     * \r\n     * @param year Indica l'Anno Accademico di riferimento.\r\n     * @param course Indica il codice identificativo del Corso di Studio di riferimento.\r\n     * @param courseYear Indica il Codice del Curriculum e l'Anno di Corso di riferimento,\r\n     * separati dal carattere | (pipe).\r\n     * @param term Indica il codice del Periodo Didattico di riferimento.\r\n     */\r\n    getLessonsByCourse(\r\n        year: string,\r\n        course: string,\r\n        courseYear: string,\r\n        term: string\r\n    ): Observable<Scheduler> {\r\n        return this.http.get(`${this.base}/grid_call_new.php`, {\r\n            params: new HttpParams()\r\n                .set('view', 'easycourse')\r\n                .set('include', 'corso')\r\n                .set('anno', year)\r\n                .set('corso', course)\r\n                .set('anno2', courseYear)\r\n                .set('visualizzazione_orario', 'std')\r\n                .set('periodo_didattico', term)\r\n        }).pipe(\r\n            map((res: any) => this.getLessons(res))\r\n        )\r\n    }\r\n\r\n    /**\r\n     * ecupera il Calendario delle Lezioni per Docente.\r\n     * \r\n     * @param year Indica l'Anno Accademico di riferimento.\r\n     * @param prof Indica la matricola del Docente di riferimento.\r\n     * @param term Indica il codice del Periodo Didattico di riferimento\r\n     */\r\n    getLessonsByProf(\r\n        year: string,\r\n        prof: string,\r\n        term: string\r\n    ): Observable<Scheduler> {\r\n        return this.http.get(`${this.base}/grid_call_new.php`, {\r\n            params: new HttpParams()\r\n                .set('view', 'easycourse')\r\n                .set('include', 'docente')\r\n                .set('anno', year)\r\n                .set('docente', prof)\r\n                .set('visualizzazione_orario', 'std')\r\n                .set('periodo_didattico', term)\r\n        }).pipe(\r\n            map((res: any) => this.getLessons(res))\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Manipola la risposta ottenuta dal server al fine di ottenere i dati in un unico formato.\r\n     * \r\n     * @param res La risposta ottenuta dal server. \r\n     */\r\n    private getLessons(res: any) {\r\n        const daysLabels = {\r\n            'monday': 0,\r\n            'tuesday': 1,\r\n            'wednesday': 2,\r\n            'thursday': 3,\r\n            'friday': 4\r\n        };\r\n\r\n        const lessons: Array<any> = res.celle;\r\n        const schedule = {\r\n            0: [] as Lesson[],\r\n            1: [] as Lesson[],\r\n            2: [] as Lesson[],\r\n            3: [] as Lesson[],\r\n            4: [] as Lesson[]\r\n        } as Schedule;\r\n        const legend: any = {};\r\n\r\n        lessons.forEach((lesson: any) => {\r\n            const name = lesson.nome_insegnamento.replace('<i class=\"fa fa-asterisk\" aria-hidden title=\"*\"></i>', '').trim();\r\n            const teachingCode = lesson.codice_insegnamento;\r\n            const day = lesson.data.toLocaleLowerCase();\r\n            const courses = lesson.percorso_didattico.split('<br />');\r\n\r\n            let profsFullnames = lesson.docente;\r\n            let profsMails = lesson.mail_docente;\r\n            const profs: SessionProf[] = [];\r\n\r\n            if (profsFullnames) {\r\n                profsFullnames = profsFullnames.split(',');\r\n                profsMails = profsMails ? profsMails.split(',') : [];\r\n\r\n                profsFullnames.forEach((fullname: string, index: number) => {\r\n                    const [lastname, firstname] = fullname.trim().split(' ');\r\n                    const mail = profsMails[index] || '';\r\n\r\n                    profs.push({\r\n                        firstname: firstname,\r\n                        lastname: lastname,\r\n                        mail: mail\r\n                    })\r\n                })\r\n            }\r\n\r\n            const dayIndex = daysLabels[day];\r\n            schedule[dayIndex].push({\r\n                name: name,\r\n                teachingCode: teachingCode,\r\n                day: dayIndex,\r\n                timeStart: lesson.ora_inizio,\r\n                timeEnd: lesson.ora_fine,\r\n                room: lesson.aula,\r\n                profs: profs,\r\n                courses: courses,\r\n            } as Lesson);\r\n\r\n            legend[teachingCode] || (legend[teachingCode] = name);\r\n        });\r\n\r\n        return {\r\n            schedule: schedule,\r\n            legend: legend\r\n        } as Scheduler;\r\n    }\r\n\r\n}\r\n"]}