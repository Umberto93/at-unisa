{"version":3,"sources":["webpack:///src/app/pages/agendaweb/lessons/lessons.page.scss","webpack:///src/app/pages/agendaweb/lessons/lessons.page.html","webpack:///src/app/pages/agendaweb/lessons/components/course-filter-modal/course-filter-modal.component.ts","webpack:///src/app/pages/agendaweb/lessons/components/course-filter-modal/course-filter-modal.component.html","webpack:///src/app/pages/agendaweb/lessons/components/lessons-prof/lessons-prof.component.ts","webpack:///src/app/pages/agendaweb/lessons/components/lessons-prof/lessons-prof.component.scss","webpack:///src/app/pages/agendaweb/lessons/lessons.page.ts","webpack:///src/app/pages/agendaweb/lessons/components/lessons-prof/lessons-prof.component.html","webpack:///src/app/pages/agendaweb/lessons/components/lessons-course/lessons-course.component.html","webpack:///src/app/pages/agendaweb/lessons/components/lessons-course/lessons-course.component.scss","webpack:///src/app/pages/agendaweb/lessons/components/lessons-course/lessons-course.component.ts","webpack:///src/app/pages/agendaweb/lessons/components/lesson-modal/lesson-modal.component.ts","webpack:///src/app/pages/agendaweb/lessons/components/lesson-modal/lesson-modal.component.html","webpack:///src/app/pages/agendaweb/lessons/components/lesson-modal/lesson-modal.component.scss","webpack:///src/app/pages/agendaweb/lessons/lessons-routing.module.ts","webpack:///src/app/pages/agendaweb/lessons/components/course-filter-modal/course-filter-modal.component.scss","webpack:///src/app/pages/agendaweb/lessons/lessons.module.ts","webpack:///src/app/services/agendaweb/lessons/lessons.service.ts"],"names":["CourseFilterModalComponent","navParams","courses","get","checkedSet","lessonsSet","Set","confirmCallback","filterCallback","bind","a","b","value","localeCompare","key","has","event","detail","checked","add","selector","template","LessonsProfComponent","lessonsService","formBuilder","modalController","customActionSheetOptions","cssClass","header","mode","slideOpts","autoHeight","spaceBetween","daysLabels","labels","activeIndex","isReady","yearIndex","profIndex","yearOptions","profOptions","lessonsForm","group","year","required","prof","term","initOperations","updateSetCallback","getLessonsYearOptions","subscribe","res","reset","target","parseInt","slides","slideTo","getActiveIndex","index","button","segment","children","click","periodi","optionValue","controls","activeYear","getLessonsProfOptions","getLessonsByProf","scheduler","Object","keys","legend","setTimeout","schedule","lessons","filter","lesson","teachingCode","dayIndex","create","component","componentProps","modal","present","newSet","update","LessonsPage","route","searchBy","queryParams","params","LessonsCourseComponent","courseIndex","courseYearIndex","courseOptions","courseYearOptions","course","courseYear","pub_periodi","getLessonsCourseOptions","activeCourse","getLessonsCourseYearsOptions","getLessonsByCourse","LessonModalComponent","day","routes","path","LessonsPageRoutingModule","imports","forChild","exports","LessonsPageModule","declarations","LessonsService","http","base","easycourseApi","JSON","parse","split","set","responseType","pipe","parseResponse","getLessons","celle","forEach","name","nome_insegnamento","replace","trim","codice_insegnamento","data","toLocaleLowerCase","percorso_didattico","profsFullnames","docente","profsMails","mail_docente","profs","fullname","lastname","firstname","mail","push","timeStart","ora_inizio","timeEnd","ora_fine","room","aula","providedIn"],"mappings":"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","file":"lessons-lessons-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsZXNzb25zLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-content class=\\\"page-content\\\">\\n    <app-lessons-course *ngIf=\\\"searchBy === 'course'\\\"></app-lessons-course>\\n    <app-lessons-prof *ngIf=\\\"searchBy === 'prof'\\\"></app-lessons-prof>\\n</ion-content>\\n\";","import { KeyValue } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { NavParams } from '@ionic/angular';\n\n@Component({\n    selector: 'app-course-filter-modal',\n    templateUrl: './course-filter-modal.component.html',\n    styleUrls: ['./course-filter-modal.component.scss'],\n})\nexport class CourseFilterModalComponent implements OnInit {\n\n    private courses: any;\n    private checkedSet: Set<string>;\n    private lessonsSet: Set<string>;\n    private confirmCallback: Function;\n\n    constructor(\n        private navParams: NavParams\n    ) {\n        this.courses = this.navParams.get('courses');\n\n        /* Set contenente i codici dei corsi di cui l'utente sta attualmente visualizzando \n         * le lezioni.\n         */\n        this.checkedSet = this.navParams.get('checkedSet');\n\n        /* Nuovo Set contenente i nuovi codici dei corsi di cui l'utente vorrà visualizzare\n         * le lezioni\n         */\n        this.lessonsSet = new Set(this.checkedSet);\n        this.confirmCallback = this.navParams.get('confirmCallback');\n\n        this.filterCallback = this.filterCallback.bind(this);\n    }\n\n    ngOnInit() { }\n\n    /**\n     * Effettua l'ordinamento crescente delle opzioni mostrate nel modale.\n     * \n     * @param a E' la prima coppia <chiave, valore>. La chiave è una stringa che \n     * rappresenta il codice di un corso mentre il valore ne rappresenta il nome. \n     * @param b E' la seconda coppia <chiave, valore>. La chiave è una stringa che \n     * rappresenta il codice di un corso mentre il valore ne rappresenta il nome.\n     */\n    private ascSort(\n        a: KeyValue<string, string>,\n        b: KeyValue<string, string>) {\n        return a.value.localeCompare(b.value);\n    }\n\n    /**\n     * Permette di verificare se l'opzione in esame è associata a un corso di cui\n     * l'utente desidera visualizzare le lezioni.\n     * Il metodo verifica la presenza del codice del corso, passato come parametro\n     * di input, all'interno del checkedSet (parametro passato come input al componente).\n     * \n     * @param key Indica il codice dell'esame. \n     */\n    private isChecked(key: string) {\n        return this.checkedSet.has(key);\n    }\n\n    /**\n     * Permette di aggiornare il lessonsSet (nuovo Set) sulla base dell'opzione\n     * selezionata/deselezionata.\n     *  \n     * @param event L'evento di change della Ion Checkbox. \n     */\n    private handleChange(event: CustomEvent) {\n        const detail = event.detail;\n        const checked = detail.checked;\n        const value = detail.value;\n\n        if (!checked) {\n            this.lessonsSet.delete(value);\n        } else {\n            this.lessonsSet.add(value);\n        }\n    }\n\n    /**\n     * Callback per effettuare il filtraggio delle lezioni sulla base del lessonsSet\n     * (nuovo Set).\n     */\n    private filterCallback() {\n        this.confirmCallback(this.lessonsSet);\n    }\n\n}\n","export default \"<app-modal\\n    title=\\\"Seleziona insegnamenti\\\"\\n    [confirmButton]=\\\"true\\\"\\n    [confirmCallback]=\\\"filterCallback\\\"\\n>\\n    <ion-list>\\n        <ion-item *ngFor=\\\"let course of courses | keyvalue: ascSort\\\">\\n            <ion-label>{{course.value}}</ion-label>\\n            <ion-checkbox\\n                slot=\\\"end\\\"\\n                [value]=\\\"course.key\\\"\\n                [checked]=\\\"isChecked(course.key)\\\"\\n                (ionChange)=\\\"handleChange($event)\\\"\\n            ></ion-checkbox>\\n        </ion-item>\\n    </ion-list>\\n</app-modal>\\n\";","import { KeyValue } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonSegment, IonSlides, ModalController } from '@ionic/angular';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Lesson } from 'src/app/interfaces/lesson';\nimport { Scheduler } from 'src/app/interfaces/scheduler';\nimport { LessonModalComponent } from '../lesson-modal/lesson-modal.component';\nimport { CourseFilterModalComponent } from '../course-filter-modal/course-filter-modal.component';\nimport { LessonsService } from 'src/app/services/agendaweb/lessons/lessons.service';\n\n\n@Component({\n\tselector: 'app-lessons-prof',\n\ttemplateUrl: './lessons-prof.component.html',\n\tstyleUrls: ['./lessons-prof.component.scss'],\n})\nexport class LessonsProfComponent implements OnInit {\n\n\t@ViewChild(IonSlides) slides: IonSlides;\n\t@ViewChild(IonSegment) segment: IonSegment;\n\n\tprivate readonly customActionSheetOptions: any = {\n\t\tcssClass: 'form-select-action-sheet',\n\t\theader: 'Seleziona',\n\t\tmode: 'md'\n\t};\n\n\tprivate readonly slideOpts: any = {\n\t\tautoHeight: true,\n\t\tspaceBetween: 20\n\t};\n\n\tprivate readonly daysLabels: any = {\n\t\t0: 'Lunedì',\n\t\t1: 'Martedì',\n\t\t2: 'Mercoledì',\n\t\t3: 'Giovedì',\n\t\t4: 'Venerdì'\n\t};\n\n\tprivate labels: String[];\n\tprivate activeIndex: number;\n\tprivate isReady: boolean;\n\tprivate lessonsForm: FormGroup;\n\tprivate scheduler: Scheduler;\n\tprivate lessonsSet: Set<string>;\n\tprivate yearIndex: number;\n\tprivate profIndex: number;\n\tprivate yearOptions: any;\n\tprivate profOptions: any;\n\n\tconstructor(\n\t\tprivate lessonsService: LessonsService,\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate modalController: ModalController\n\t) {\n\t\tthis.labels = ['Ricerca', 'Riepilogo'];\n\t\tthis.activeIndex = 0;\n\t\tthis.isReady = false;\n\n\t\t// Set dei corsi di cui visualizzare le lezioni.\n\t\tthis.lessonsSet = new Set();\n\n\t\t// Indici per le informazioni di riferimento.\n\t\tthis.yearIndex = -1;\n\t\tthis.profIndex = -1;\n\n\t\t// Opzioni select.\n\t\tthis.yearOptions = {};\n\t\tthis.profOptions = [];\n\n\t\tthis.lessonsForm = this.formBuilder.group({\n\t\t\tyear: new FormControl('', Validators.required),\n\t\t\tprof: new FormControl('', Validators.required),\n\t\t\tterm: new FormControl('', Validators.required)\n\t\t});\n\n\t\tthis.initOperations = this.initOperations.bind(this);\n\t\tthis.updateSetCallback = this.updateSetCallback.bind(this);\n\t}\n\n\tngOnInit() {\n\t\tthis.initOperations();\n\t}\n\n\t/**\n\t * Permette di inizializzare il componente e di ottenere le opzioni \n\t * relative al select per l'Anno Accademico.\n\t */\n\tprivate initOperations() {\n\t\treturn this.lessonsService.getLessonsYearOptions()\n\t\t\t.subscribe((res: any) => {\n\t\t\t\t// Reset indici per le informazioni di riferimento.\n\t\t\t\tthis.yearIndex = -1;\n\t\t\t\tthis.profIndex = -1;\n\n\t\t\t\t// Reset opzioni select e form.\n\t\t\t\tthis.yearOptions = {};\n\t\t\t\tthis.profOptions = [];\n\t\t\t\tthis.lessonsForm.reset();\n\n\t\t\t\t// Aggiornamento dati.\n\t\t\t\tthis.yearOptions = res;\n\t\t\t\tthis.isReady = true;\n\t\t\t})\n\t}\n\n\t/**\n\t * Aggiorna la slide alla pressione in base allo specifico Segment Button.\n\t * \n\t * @param event L'evento associato al Segment Button.\n\t */\n\tprivate async slideTo(event: CustomEvent) {\n\t\tconst target = event.target as HTMLIonSegmentButtonElement;\n\t\tconst value = parseInt(target.value);\n\n\t\tawait this.slides.slideTo(value);\n\t\tthis.activeIndex = value;\n\t}\n\n\t/**\n\t * Aggiorna il Segment Button sulla base dell'indice corrente della slide.\n\t */\n\tprivate async setActiveIndex() {\n\t\tconst index = await this.slides.getActiveIndex();\n\n\t\tif (index !== this.activeIndex) {\n\t\t\tconst button = this.segment['el'].children[index] as HTMLElement;\n\t\t\tbutton.click();\n\t\t}\n\t}\n\n\t/**\n\t * Effettua l'ordinamento decrescente delle opzioni relative all'Anno Accademico.\n\t * \n\t * @param a E' la prima coppia <chiave, valore>. La chiave è una stringa che \n\t * rappresenta l'Anno Accademico mentre il valore è l'oggetto opzione. \n\t * @param b E' la seconda coppia <chiave, valore>. La chiave è una stringa che\n\t * rappresenta l'Anno Accademico mentre il valore è l'oggetto opzione.\n\t */\n\tprivate descSort(a: KeyValue<string, any>, b: KeyValue<string, any>) {\n\t\treturn b.key.localeCompare(a.key);\n\t}\n\n\t/**\n\t * Restituisce le opzioni del select relative all'Anno Accademico.\n\t */\n\tprivate getYears(): any {\n\t\treturn this.yearOptions;\n\t}\n\n\t/**\n\t * Restituisce le opzioni del select relative al Docente.\n\t */\n\tprivate getProfs(): any {\n\t\tif (this.yearIndex === -1) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.profOptions;\n\t}\n\n\t/**\n\t * Restituisce le opzioni del select relative al Periodo Didattico.\n\t */\n\tprivate getTerms() {\n\t\tif (this.profIndex === -1) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.profOptions[this.profIndex].periodi;\n\t}\n\n\t/**\n\t * Imposta l'indice relativo all'Anno Accademico di riferimento.\n\t * \n\t * @param event L'evento di change emesso dallo Ion Select.\n\t */\n\tprivate setYearIndex(event: CustomEvent) {\n\t\tconst optionValue = event.detail.value;\n\n\t\tif (this.yearIndex !== -1) {\n\t\t\tthis.lessonsForm.controls.prof.reset();\n\t\t\tthis.lessonsForm.controls.term.reset();\n\t\t\tthis.profIndex = -1;\n\t\t}\n\n\t\tif (optionValue !== '') {\n\t\t\tthis.yearIndex = optionValue.index;\n\n\t\t\tconst activeYear = this.lessonsForm.value.year.value;\n\t\t\tthis.lessonsService.getLessonsProfOptions(activeYear)\n\t\t\t\t.subscribe((res) => {\n\t\t\t\t\tthis.profOptions = res;\n\t\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Imposta l'indice relativo al Docente di riferimento.\n\t * \n\t * @param event L'evento di change emesso dallo Ion Select.\n\t */\n\tprivate setProfIndex(event: CustomEvent) {\n\t\tconst optionValue = event.detail.value;\n\n\t\tif (this.profIndex !== -1) {\n\t\t\tthis.lessonsForm.controls.term.reset();\n\t\t}\n\n\t\tif (optionValue !== '') {\n\t\t\tthis.profIndex = optionValue.index;\n\t\t}\n\t}\n\n\t/**\n\t * Recupera il calendario delle lezioni sulla base dell'Anno Accademico,\n\t * del Docente e del Periodo Didattico di riferimento.\n\t */\n\tprivate getScheduler() {\n\t\tthis.lessonsService.getLessonsByProf(\n\t\t\tthis.lessonsForm.value.year.value,\n\t\t\tthis.lessonsForm.value.prof.value,\n\t\t\tthis.lessonsForm.value.term.value,\n\t\t).subscribe(\n\t\t\t(scheduler: Scheduler) => {\n\t\t\t\tthis.scheduler = scheduler;\n\t\t\t\tthis.lessonsSet = new Set(Object.keys(scheduler.legend));\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.activeIndex++;\n\t\t\t\t\tthis.slides.slideTo(this.activeIndex);\n\t\t\t\t}, 300);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Restituisce l'orario delle lezioni.\n\t */\n\tprivate getSchedule() {\n\t\treturn this.scheduler.schedule;\n\t}\n\n\t/**\n\t * Restituisce la legenda dei corsi presenti nell'orario delle lezioni.\n\t */\n\tprivate getLegend() {\n\t\treturn this.scheduler.legend;\n\t}\n\n\t/**\n\t * Restituisce le lezioni sulla base del filtro applicato dall'utente.\n\t * \n\t * @param lessons Le lezioni relative ad un certo giorno della settimana.\n\t */\n\tprivate getLessons(lessons: Lesson[]) {\n\t\treturn lessons\n\t\t\t.filter((lesson: Lesson) => this.lessonsSet.has(lesson.teachingCode));\n\t}\n\n\t/**\n\t * Permette di ottenere il giorno della settimana associato al relativo indice intero. \n\t * \n\t * @param dayIndex L'indice intero che identifica il giorno della settimana. \n\t */\n\tprivate getDay(dayIndex: number) {\n\t\treturn this.daysLabels[dayIndex];\n\t}\n\n\t/**\n\t * Mostra un modale per poter effettuare un filtraggio attraverso cui selezionare\n\t * i corsi di cui si intende visualizzare le lezioni.\n\t * \n\t * @param courses Rappresenta la legenda dei corsi.\n\t * @param checkedSet Rappresenta un Set contenente i codici dei corsi di cui si intende\n\t * visualizzarne le lezioni.\n\t * @param confirmCallback Rappresenta una callback che verrà invocata durante la chiusura\n\t * del modale.\n\t */\n\tprivate async presentCourseFilterModal() {\n\t\tconst modal = await this.modalController.create({\n\t\t\tcomponent: CourseFilterModalComponent,\n\t\t\tcomponentProps: {\n\t\t\t\tcourses: this.scheduler.legend,\n\t\t\t\tcheckedSet: this.lessonsSet,\n\t\t\t\tconfirmCallback: this.updateSetCallback\n\t\t\t},\n\t\t\tcssClass: 'app-modal',\n\t\t});\n\n\t\treturn await modal.present();\n\t}\n\n\t/**\n\t * Permette di aggiornare il Set dei corsi di cui si intende visualizzarne le lezioni.\n\t * \n\t * @param newSet Indica il nuovo Set. \n\t */\n\tprivate updateSetCallback(newSet: Set<string>) {\n\t\tthis.lessonsSet = newSet;\n\t\t// Aggiornamento altezza slide.\n\t\tsetTimeout(() => { this.slides.update() }, 300);\n\t}\n\n\t/**\n\t * Mostra un modale per poter visualizzare i dettagli di una lezione.\n\t * \n\t * @param lesson Indica la lezione di riferimento.\n\t */\n\tprivate async presentLessonModal(lesson: Lesson) {\n\t\tconst modal = await this.modalController.create({\n\t\t\tcomponent: LessonModalComponent,\n\t\t\tcomponentProps: {\n\t\t\t\tlesson: lesson\n\t\t\t},\n\t\t\tcssClass: 'app-modal'\n\t\t})\n\n\t\treturn await modal.present();\n\t}\n\n}\n","export default \"ion-slide:first-child ion-item::part(native) {\\n  align-items: flex-start;\\n  flex-direction: column;\\n}\\nion-slide:first-child ion-label {\\n  transform: scale(1);\\n  font-size: 16px;\\n  font-weight: var(--ion-font-weight-semibold);\\n}\\nion-slide form {\\n  width: 100%;\\n}\\n.app-list {\\n  margin-bottom: 30px;\\n}\\n.app-list ion-select {\\n  padding: 0;\\n  font-size: 14px;\\n}\\n.app-list ion-select::part(placeholder) {\\n  color: var(--ion-color-unisa-base);\\n  opacity: 1;\\n}\\n.app-list ion-select::part(icon) {\\n  display: none;\\n}\\n.app-list ion-datetime {\\n  padding: 0;\\n  color: var(--ion-color-unisa-base);\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxhZ2VuZGF3ZWIucGFnZS5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGxlc3NvbnMtcHJvZi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFUTtFQUNJLHVCQUFBO0VBQ0Esc0JBQUE7QUNEWjtBRElRO0VBQ0ksbUJBQUE7RUFDQSxlQUFBO0VBQ0EsNENBQUE7QUNGWjtBRE1JO0VBQ0ksV0FBQTtBQ0pSO0FEUUE7RUFDSSxtQkFBQTtBQ0xKO0FET0k7RUFDSSxVQUFBO0VBQ0EsZUFBQTtBQ0xSO0FET1E7RUFDSSxrQ0FBQTtFQUNBLFVBQUE7QUNMWjtBRFFRO0VBQ0ksYUFBQTtBQ05aO0FEVUk7RUFDSSxVQUFBO0VBQ0Esa0NBQUE7RUFDQSxlQUFBO0FDUlIiLCJmaWxlIjoibGVzc29ucy1wcm9mLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXNsaWRlIHtcclxuICAgICY6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgIGlvbi1pdGVtOjpwYXJ0KG5hdGl2ZSkge1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlvbi1sYWJlbCB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IHZhcigtLWlvbi1mb250LXdlaWdodC1zZW1pYm9sZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZvcm0ge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG59XHJcblxyXG4uYXBwLWxpc3Qge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuXHJcbiAgICBpb24tc2VsZWN0IHtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuXHJcbiAgICAgICAgJjo6cGFydChwbGFjZWhvbGRlcikge1xyXG4gICAgICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXVuaXNhLWJhc2UpO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjo6cGFydChpY29uKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlvbi1kYXRldGltZSB7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXVuaXNhLWJhc2UpO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIH1cclxufVxyXG4iLCJpb24tc2xpZGU6Zmlyc3QtY2hpbGQgaW9uLWl0ZW06OnBhcnQobmF0aXZlKSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuaW9uLXNsaWRlOmZpcnN0LWNoaWxkIGlvbi1sYWJlbCB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWlvbi1mb250LXdlaWdodC1zZW1pYm9sZCk7XG59XG5pb24tc2xpZGUgZm9ybSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYXBwLWxpc3Qge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuLmFwcC1saXN0IGlvbi1zZWxlY3Qge1xuICBwYWRkaW5nOiAwO1xuICBmb250LXNpemU6IDE0cHg7XG59XG4uYXBwLWxpc3QgaW9uLXNlbGVjdDo6cGFydChwbGFjZWhvbGRlcikge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXVuaXNhLWJhc2UpO1xuICBvcGFjaXR5OiAxO1xufVxuLmFwcC1saXN0IGlvbi1zZWxlY3Q6OnBhcnQoaWNvbikge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmFwcC1saXN0IGlvbi1kYXRldGltZSB7XG4gIHBhZGRpbmc6IDA7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItdW5pc2EtYmFzZSk7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-lessons',\n    templateUrl: './lessons.page.html',\n    styleUrls: ['./lessons.page.scss'],\n})\nexport class LessonsPage implements OnInit {\n\n    private searchBy: string;\n\n    constructor(\n        private route: ActivatedRoute\n    ) {\n        this.searchBy = 'course';\n    }\n\n    ngOnInit() {\n        this.route.queryParams.subscribe(params => {\n            if (params['searchBy']) {\n                this.searchBy = params['searchBy'];\n            }\n        });\n    }\n\n}\n","export default \"<app-refresher [refreshCallback]=\\\"initOperations\\\"></app-refresher>\\n<div class=\\\"flex flex-direction-column\\\">\\n    <app-header>\\n        <ion-toolbar>\\n            <ion-title class=\\\"page-title\\\">Lezioni (Docente)</ion-title>\\n            <ion-buttons slot=\\\"end\\\">\\n                <ion-button\\n                    class=\\\"ion-no-margin\\\"\\n                    [disabled]=\\\"!scheduler\\\"\\n                    (click)=\\\"presentCourseFilterModal()\\\"\\n                >\\n                    <i class=\\\"fas fa-eye app-icon\\\"></i>\\n                </ion-button>\\n            </ion-buttons>\\n        </ion-toolbar>\\n        <ion-toolbar class=\\\"segment-toolbar\\\">\\n            <ion-segment\\n                [value]=\\\"activeIndex\\\"\\n                (ionChange)=\\\"slideTo($event)\\\"\\n                swipeGesture=\\\"false\\\"\\n            >\\n                <ion-segment-button\\n                    *ngFor=\\\"let label of labels; index as i\\\"\\n                    [value]=\\\"i\\\"\\n                >\\n                    <ion-label>{{label}}</ion-label>\\n                </ion-segment-button>\\n            </ion-segment>\\n        </ion-toolbar>\\n    </app-header>\\n    <div class=\\\"page-main\\\">\\n        <ion-slides\\n            *ngIf=\\\"isReady\\\"\\n            (ionSlideWillChange)=\\\"setActiveIndex()\\\"\\n            [options]=\\\"slideOpts\\\"\\n        >\\n            <ion-slide>\\n                <form\\n                    [formGroup]=\\\"lessonsForm\\\"\\n                    (submit)=\\\"getScheduler()\\\"\\n                >\\n                    <ion-list class=\\\"app-list\\\">\\n                        <ion-item>\\n                            <ion-label>\\n                                <h3>Anno accademico</h3>\\n                            </ion-label>\\n                            <ion-select\\n                                cancelText=\\\"Cancella\\\"\\n                                formControlName=\\\"year\\\"\\n                                interface=\\\"action-sheet\\\"\\n                                placeholder=\\\"Seleziona\\\"\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\n                                (ionChange)=\\\"setYearIndex($event)\\\"\\n                            >\\n                                <ion-select-option\\n                                    *ngFor=\\\"let year of getYears() | keyvalue: descSort; index as i\\\"\\n                                    [value]=\\\"{index: i, value: year.value.valore}\\\"\\n                                >\\n                                    {{year.value.label}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <ion-item [disabled]=\\\"yearIndex === -1\\\">\\n                            <ion-label>\\n                                <h3>Docente</h3>\\n                            </ion-label>\\n                            <ion-select\\n                                cancelText=\\\"Cancella\\\"\\n                                formControlName=\\\"prof\\\"\\n                                placeholder=\\\"Seleziona\\\"\\n                                interface=\\\"action-sheet\\\"\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\n                                (ionChange)=\\\"setProfIndex($event)\\\"\\n                            >\\n                                <ion-select-option\\n                                    *ngFor=\\\"let prof of getProfs(); index as i\\\"\\n                                    [value]=\\\"{index: i, value: prof.valore}\\\"\\n                                >\\n                                    {{prof.label}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <ion-item [disabled]=\\\"profIndex === -1\\\">\\n                            <ion-label>\\n                                <h3>Periodo Didattico</h3>\\n                            </ion-label>\\n                            <ion-select\\n                                cancelText=\\\"Cancella\\\"\\n                                formControlName=\\\"term\\\"\\n                                placeholder=\\\"Seleziona\\\"\\n                                interface=\\\"action-sheet\\\"\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\n                            >\\n                                <ion-select-option\\n                                    *ngFor=\\\"let term of getTerms(); index as i\\\"\\n                                    [value]=\\\"{index: i, value: term.valore}\\\"\\n                                >\\n                                    {{term.label}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                    </ion-list>\\n                    <ion-button\\n                        class=\\\"form-submit form-submit--button\\\"\\n                        type=\\\"submit\\\"\\n                        [disabled]=\\\"!lessonsForm.valid\\\"\\n                    >\\n                        Cerca\\n                    </ion-button>\\n                </form>\\n            </ion-slide>\\n            <ion-slide>\\n                <ion-list class=\\\"app-list\\\">\\n                    <ng-container *ngIf=\\\"scheduler\\\">\\n                        <ng-container *ngFor=\\\"let schedule of getSchedule() | keyvalue\\\">\\n                            <ion-list-header>\\n                                <ion-label>{{getDay(schedule.key)}}</ion-label>\\n                            </ion-list-header>\\n                            <ion-item\\n                                *ngFor=\\\"let lesson of getLessons(schedule.value)\\\"\\n                                (click)=\\\"presentLessonModal(lesson)\\\"\\n                            >\\n                                <ion-label>\\n                                    <h3>{{lesson.name}}</h3>\\n                                    <div>\\n                                        <i class=\\\"far fa-calendar\\\"></i>\\n                                        <span>\\n                                            {{lesson.timeStart}} - {{lesson.timeEnd}}\\n                                        </span>\\n                                    </div>\\n                                    <div>\\n                                        <i class=\\\"fas fa-map\\\"></i>\\n                                        <span>{{lesson.room}}</span>\\n                                    </div>\\n                                </ion-label>\\n                            </ion-item>\\n                        </ng-container>\\n                    </ng-container>\\n                    <ion-item *ngIf=\\\"!scheduler\\\">Nessun elemento da mostrare.</ion-item>\\n                </ion-list>\\n            </ion-slide>\\n        </ion-slides>\\n    </div>\\n</div>\\n\";","export default \"<app-refresher [refreshCallback]=\\\"initOperations\\\"></app-refresher>\\n<div class=\\\"flex flex-direction-column\\\">\\n    <app-header>\\n        <ion-toolbar>\\n            <ion-title class=\\\"page-title\\\">Lezioni (Insegnamento)</ion-title>\\n            <ion-buttons slot=\\\"end\\\">\\n                <ion-button\\n                    class=\\\"ion-no-margin\\\"\\n                    [disabled]=\\\"!scheduler\\\"\\n                    (click)=\\\"presentCourseFilterModal()\\\"\\n                >\\n                    <i class=\\\"fas fa-eye app-icon\\\"></i>\\n                </ion-button>\\n            </ion-buttons>\\n        </ion-toolbar>\\n        <ion-toolbar class=\\\"segment-toolbar\\\">\\n            <ion-segment\\n                [value]=\\\"activeIndex\\\"\\n                (ionChange)=\\\"slideTo($event)\\\"\\n                swipeGesture=\\\"false\\\"\\n            >\\n                <ion-segment-button\\n                    *ngFor=\\\"let label of labels; index as i\\\"\\n                    [value]=\\\"i\\\"\\n                >\\n                    <ion-label>{{label}}</ion-label>\\n                </ion-segment-button>\\n            </ion-segment>\\n        </ion-toolbar>\\n    </app-header>\\n    <div class=\\\"page-main\\\">\\n        <ion-slides\\n            *ngIf=\\\"isReady\\\"\\n            (ionSlideWillChange)=\\\"setActiveIndex()\\\"\\n            [options]=\\\"slideOpts\\\"\\n        >\\n            <ion-slide>\\n                <form\\n                    [formGroup]=\\\"lessonsForm\\\"\\n                    (submit)=\\\"getScheduler()\\\"\\n                >\\n                    <ion-list class=\\\"app-list\\\">\\n                        <ion-item>\\n                            <ion-label>\\n                                <h3>Anno accademico</h3>\\n                            </ion-label>\\n                            <ion-select\\n                                cancelText=\\\"Cancella\\\"\\n                                formControlName=\\\"year\\\"\\n                                interface=\\\"action-sheet\\\"\\n                                placeholder=\\\"Seleziona\\\"\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\n                                (ionChange)=\\\"setYearIndex($event)\\\"\\n                            >\\n                                <ion-select-option\\n                                    *ngFor=\\\"let year of getYears() | keyvalue: descSort; index as i\\\"\\n                                    [value]=\\\"{index: i, value: year.value.valore}\\\"\\n                                >\\n                                    {{year.value.label}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <ion-item [disabled]=\\\"yearIndex === -1\\\">\\n                            <ion-label>\\n                                <h3>Corso di studio</h3>\\n                            </ion-label>\\n                            <ion-select\\n                                cancelText=\\\"Cancella\\\"\\n                                formControlName=\\\"course\\\"\\n                                placeholder=\\\"Seleziona\\\"\\n                                interface=\\\"action-sheet\\\"\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\n                                (ionChange)=\\\"setCourseIndex($event)\\\"\\n                            >\\n                                <ion-select-option\\n                                    *ngFor=\\\"let course of getCourses(); index as i\\\"\\n                                    [value]=\\\"{index: i, value: course.valore}\\\"\\n                                >\\n                                    [{{course.valore}}] - {{course.label}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <ion-item [disabled]=\\\"courseIndex === -1\\\">\\n                            <ion-label>\\n                                <h3>Anno di studio</h3>\\n                            </ion-label>\\n                            <ion-select\\n                                cancelText=\\\"Cancella\\\"\\n                                formControlName=\\\"courseYear\\\"\\n                                placeholder=\\\"Seleziona\\\"\\n                                interface=\\\"action-sheet\\\"\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\n                                (ionChange)=\\\"setCourseYearIndex($event)\\\"\\n                            >\\n                                <ion-select-option\\n                                    *ngFor=\\\"let courseYear of getCourseYears(); index as i\\\"\\n                                    [value]=\\\"{index: i, value: courseYear.valore}\\\"\\n                                >\\n                                    {{courseYear.label}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <ion-item [disabled]=\\\"courseYearIndex === -1\\\">\\n                            <ion-label>\\n                                <h3>Periodo Didattico</h3>\\n                            </ion-label>\\n                            <ion-select\\n                                cancelText=\\\"Cancella\\\"\\n                                formControlName=\\\"term\\\"\\n                                placeholder=\\\"Seleziona\\\"\\n                                interface=\\\"action-sheet\\\"\\n                                [interfaceOptions]=\\\"customActionSheetOptions\\\"\\n                            >\\n                                <ion-select-option\\n                                    *ngFor=\\\"let term of getTerms(); index as i\\\"\\n                                    [value]=\\\"{index: i, value: term.valore}\\\"\\n                                >\\n                                    {{term.label}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                    </ion-list>\\n                    <ion-button\\n                        class=\\\"form-submit form-submit--button\\\"\\n                        type=\\\"submit\\\"\\n                        [disabled]=\\\"!lessonsForm.valid\\\"\\n                    >\\n                        Cerca\\n                    </ion-button>\\n                </form>\\n            </ion-slide>\\n            <ion-slide>\\n                <ion-list class=\\\"app-list\\\">\\n                    <ng-container *ngIf=\\\"scheduler\\\">\\n                        <ng-container *ngFor=\\\"let schedule of getSchedule() | keyvalue\\\">\\n                            <ion-list-header>\\n                                <ion-label>{{getDay(schedule.key)}}</ion-label>\\n                            </ion-list-header>\\n                            <ion-item\\n                                *ngFor=\\\"let lesson of getLessons(schedule.value)\\\"\\n                                (click)=\\\"presentLessonModal(lesson)\\\"\\n                            >\\n                                <ion-label>\\n                                    <h3>{{lesson.name}}</h3>\\n                                    <div>\\n                                        <i class=\\\"far fa-calendar\\\"></i>\\n                                        <span>\\n                                            {{lesson.timeStart}} - {{lesson.timeEnd}}\\n                                        </span>\\n                                    </div>\\n                                    <div>\\n                                        <i class=\\\"fas fa-map\\\"></i>\\n                                        <span>{{lesson.room}}</span>\\n                                    </div>\\n                                </ion-label>\\n                            </ion-item>\\n                        </ng-container>\\n                    </ng-container>\\n                    <ion-item *ngIf=\\\"!scheduler\\\">Nessun elemento da mostrare.</ion-item>\\n                </ion-list>\\n            </ion-slide>\\n        </ion-slides>\\n    </div>\\n</div>\\n\";","export default \"ion-slide:first-child ion-item::part(native) {\\n  align-items: flex-start;\\n  flex-direction: column;\\n}\\nion-slide:first-child ion-label {\\n  transform: scale(1);\\n  font-size: 16px;\\n  font-weight: var(--ion-font-weight-semibold);\\n}\\nion-slide form {\\n  width: 100%;\\n}\\n.app-list {\\n  margin-bottom: 30px;\\n}\\n.app-list ion-select {\\n  padding: 0;\\n  font-size: 14px;\\n}\\n.app-list ion-select::part(placeholder) {\\n  color: var(--ion-color-unisa-base);\\n  opacity: 1;\\n}\\n.app-list ion-select::part(icon) {\\n  display: none;\\n}\\n.app-list ion-datetime {\\n  padding: 0;\\n  color: var(--ion-color-unisa-base);\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxhZ2VuZGF3ZWIucGFnZS5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGxlc3NvbnMtY291cnNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVRO0VBQ0ksdUJBQUE7RUFDQSxzQkFBQTtBQ0RaO0FESVE7RUFDSSxtQkFBQTtFQUNBLGVBQUE7RUFDQSw0Q0FBQTtBQ0ZaO0FETUk7RUFDSSxXQUFBO0FDSlI7QURRQTtFQUNJLG1CQUFBO0FDTEo7QURPSTtFQUNJLFVBQUE7RUFDQSxlQUFBO0FDTFI7QURPUTtFQUNJLGtDQUFBO0VBQ0EsVUFBQTtBQ0xaO0FEUVE7RUFDSSxhQUFBO0FDTlo7QURVSTtFQUNJLFVBQUE7RUFDQSxrQ0FBQTtFQUNBLGVBQUE7QUNSUiIsImZpbGUiOiJsZXNzb25zLWNvdXJzZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1zbGlkZSB7XHJcbiAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICBpb24taXRlbTo6cGFydChuYXRpdmUpIHtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpb24tbGFiZWwge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiB2YXIoLS1pb24tZm9udC13ZWlnaHQtc2VtaWJvbGQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmb3JtIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxufVxyXG5cclxuLmFwcC1saXN0IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcblxyXG4gICAgaW9uLXNlbGVjdCB7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcblxyXG4gICAgICAgICY6OnBhcnQocGxhY2Vob2xkZXIpIHtcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci11bmlzYS1iYXNlKTtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6OnBhcnQoaWNvbikge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpb24tZGF0ZXRpbWUge1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci11bmlzYS1iYXNlKTtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB9XHJcbn1cclxuIiwiaW9uLXNsaWRlOmZpcnN0LWNoaWxkIGlvbi1pdGVtOjpwYXJ0KG5hdGl2ZSkge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbmlvbi1zbGlkZTpmaXJzdC1jaGlsZCBpb24tbGFiZWwge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1pb24tZm9udC13ZWlnaHQtc2VtaWJvbGQpO1xufVxuaW9uLXNsaWRlIGZvcm0ge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmFwcC1saXN0IHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cbi5hcHAtbGlzdCBpb24tc2VsZWN0IHtcbiAgcGFkZGluZzogMDtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLmFwcC1saXN0IGlvbi1zZWxlY3Q6OnBhcnQocGxhY2Vob2xkZXIpIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci11bmlzYS1iYXNlKTtcbiAgb3BhY2l0eTogMTtcbn1cbi5hcHAtbGlzdCBpb24tc2VsZWN0OjpwYXJ0KGljb24pIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5hcHAtbGlzdCBpb24tZGF0ZXRpbWUge1xuICBwYWRkaW5nOiAwO1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXVuaXNhLWJhc2UpO1xuICBmb250LXNpemU6IDE0cHg7XG59Il19 */\";","import { KeyValue } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonSlides, IonSegment, ModalController } from '@ionic/angular';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Lesson } from 'src/app/interfaces/lesson';\nimport { Scheduler } from 'src/app/interfaces/scheduler';\nimport { LessonModalComponent } from '../lesson-modal/lesson-modal.component';\nimport { CourseFilterModalComponent } from '../course-filter-modal/course-filter-modal.component';\nimport { LessonsService } from 'src/app/services/agendaweb/lessons/lessons.service';\n\n\n@Component({\n    selector: 'app-lessons-course',\n    templateUrl: './lessons-course.component.html',\n    styleUrls: ['./lessons-course.component.scss'],\n})\nexport class LessonsCourseComponent implements OnInit {\n\n    @ViewChild(IonSlides) slides: IonSlides;\n    @ViewChild(IonSegment) segment: IonSegment;\n\n    private readonly customActionSheetOptions: any = {\n        cssClass: 'form-select-action-sheet',\n        header: 'Seleziona',\n        mode: 'md'\n    };\n\n    private readonly slideOpts: any = {\n        autoHeight: true,\n        spaceBetween: 20\n    };\n\n    private readonly daysLabels: any = {\n        0: 'Lunedì',\n        1: 'Martedì',\n        2: 'Mercoledì',\n        3: 'Giovedì',\n        4: 'Venerdì'\n    };\n\n    private labels: String[];\n    private activeIndex: number;\n    private isReady: boolean;\n    private lessonsForm: FormGroup;\n    private scheduler: Scheduler;\n    private lessonsSet: Set<string>;\n    private yearIndex: number;\n    private courseIndex: number;\n    private courseYearIndex: number;\n    private yearOptions: any;\n    private courseOptions: any;\n    private courseYearOptions: any;\n\n    constructor(\n        private lessonsService: LessonsService,\n        private formBuilder: FormBuilder,\n        private modalController: ModalController\n    ) {\n        this.labels = ['Ricerca', 'Riepilogo'];\n        this.activeIndex = 0;\n        this.isReady = false;\n\n        // Set dei corsi di cui visualizzare le lezioni.\n        this.lessonsSet = new Set();\n\n        // Indici per le informazioni di riferimento.\n        this.yearIndex = -1;\n        this.courseIndex = -1;\n        this.courseYearIndex = -1;\n\n        // Opzioni select.\n        this.yearOptions = {};\n        this.courseOptions = [];\n        this.courseYearOptions = [];\n\n        this.lessonsForm = this.formBuilder.group({\n            year: new FormControl('', Validators.required),\n            course: new FormControl('', Validators.required),\n            courseYear: new FormControl('', Validators.required),\n            term: new FormControl('', Validators.required)\n        });\n\n        this.initOperations = this.initOperations.bind(this);\n        this.updateSetCallback = this.updateSetCallback.bind(this);\n    }\n\n    ngOnInit() {\n        this.initOperations();\n    }\n\n    /**\n     * Permette di inizializzare il componente e di ottenere le opzioni \n     * relative al select per l'Anno Accademico.\n     */\n    private initOperations() {\n        return this.lessonsService.getLessonsYearOptions()\n            .subscribe((res: any) => {\n                // Reset indici per le informazioni di riferimento.\n                this.yearIndex = -1;\n                this.courseIndex = -1;\n                this.courseYearIndex = -1;\n\n                // Reset opzioni select e form.\n                this.yearOptions = {};\n                this.courseOptions = [];\n                this.courseYearOptions = [];\n                this.lessonsForm.reset();\n\n                // Aggiornamento dati.\n                this.yearOptions = res;\n                this.isReady = true;\n            })\n    }\n\n    /**\n     * Aggiorna la slide alla pressione in base allo specifico Segment Button.\n     * \n     * @param event L'evento associato al Segment Button.\n     */\n    private async slideTo(event: CustomEvent) {\n        const target = event.target as HTMLIonSegmentButtonElement;\n        const value = parseInt(target.value);\n\n        await this.slides.slideTo(value);\n        this.activeIndex = value;\n    }\n\n    /**\n     * Aggiorna il Segment Button sulla base dell'indice corrente della slide.\n     */\n    private async setActiveIndex() {\n        const index = await this.slides.getActiveIndex();\n\n        if (index !== this.activeIndex) {\n            const button = this.segment['el'].children[index] as HTMLElement;\n            button.click();\n        }\n    }\n\n    /**\n     * Effettua l'ordinamento decrescente delle opzioni relative all'Anno Accademico.\n     * \n     * @param a E' la prima coppia <chiave, valore>. La chiave è una stringa che \n     * rappresenta l'Anno Accademico mentre il valore è l'oggetto opzione. \n     * @param b E' la seconda coppia <chiave, valore>. La chiave è una stringa che\n     * rappresenta l'Anno Accademico mentre il valore è l'oggetto opzione.\n     */\n    private descSort(a: KeyValue<string, any>, b: KeyValue<string, any>) {\n        return b.key.localeCompare(a.key);\n    }\n\n    /**\n     * Restituisce le opzioni del select relative all'Anno Accademico.\n     */\n    private getYears(): any {\n        return this.yearOptions;\n    }\n\n    /**\n     * Restituisce le opzioni del select relative al Corso di Studio.\n     */\n    private getCourses(): any {\n        if (this.yearIndex === -1) {\n            return [];\n        }\n\n        return this.courseOptions;\n    }\n\n    /**\n     * Restituisce le opzioni del select relative all'Anno di Studio.\n     */\n    private getCourseYears(): any {\n        if (this.courseIndex === -1) {\n            return [];\n        }\n\n        return this.courseYearOptions;\n    }\n\n    /**\n     * Restituisce le opzioni del select relative al Periodo Didattico.\n     */\n    private getTerms() {\n        if (this.courseYearIndex === -1) {\n            return [];\n        }\n\n        return this.courseOptions[this.courseIndex].pub_periodi;\n    }\n\n    /**\n     * Imposta l'indice relativo all'Anno Accademico di riferimento.\n     * \n     * @param event L'evento di change emesso dallo Ion Select.\n     */\n    private setYearIndex(event: CustomEvent) {\n        const optionValue = event.detail.value;\n\n        if (this.yearIndex !== -1) {\n            this.lessonsForm.controls.course.reset();\n            this.lessonsForm.controls.courseYear.reset();\n            this.lessonsForm.controls.term.reset();\n            this.courseIndex = -1;\n            this.courseYearIndex = -1;\n        }\n\n        if (optionValue !== '') {\n            this.yearIndex = optionValue.index;\n\n            const activeYear = this.lessonsForm.value.year.value;\n            this.lessonsService.getLessonsCourseOptions(activeYear)\n                .subscribe((res) => {\n                    this.courseOptions = res;\n                })\n        }\n    }\n\n    /**\n     * Imposta l'indice relativo al Corso di Stuio di riferimento.\n     * \n     * @param event L'evento di change emesso dallo Ion Select.\n     */\n    private setCourseIndex(event: CustomEvent) {\n        const optionValue = event.detail.value;\n\n        if (this.courseIndex !== -1) {\n            this.lessonsForm.controls.courseYear.reset();\n            this.lessonsForm.controls.term.reset();\n            this.courseYearIndex = -1;\n        }\n\n        if (optionValue !== '') {\n            this.courseIndex = optionValue.index;\n\n            const activeYear = this.lessonsForm.value.year.value;\n            const activeCourse = this.lessonsForm.value.course.value;\n            this.lessonsService.getLessonsCourseYearsOptions(activeYear, activeCourse)\n                .subscribe((res: any) => {\n                    this.courseYearOptions = res;\n                })\n        }\n    }\n\n    /**\n     * Imposta l'indice relativo all'Anno di Studio di riferimento.\n     * \n     * @param event L'evento di change emesso dallo Ion Select.\n     */\n    private setCourseYearIndex(event: CustomEvent) {\n        const optionValue = event.detail.value;\n\n        if (this.courseYearIndex !== -1) {\n            this.lessonsForm.controls.term.reset();\n        }\n\n        if (optionValue !== '') {\n            this.courseYearIndex = optionValue.index;\n        }\n    }\n\n    /**\n     * Recupera il calendario delle lezioni sulla base dell'Anno Accademico,\n     * del Corso di Studio, dell'Anno di Studio e del Periodo Didattico di riferimento.\n     */\n    private getScheduler() {\n        this.lessonsService.getLessonsByCourse(\n            this.lessonsForm.value.year.value,\n            this.lessonsForm.value.course.value,\n            this.lessonsForm.value.courseYear.value,\n            this.lessonsForm.value.term.value,\n        ).subscribe(\n            (scheduler: Scheduler) => {\n                this.scheduler = scheduler;\n                this.lessonsSet = new Set(Object.keys(scheduler.legend));\n\n                setTimeout(() => {\n                    this.activeIndex++;\n                    this.slides.slideTo(this.activeIndex);\n                }, 300);\n            }\n        );\n    }\n\n    /**\n     * Restituisce l'orario delle lezioni.\n     */\n    private getSchedule() {\n        return this.scheduler.schedule;\n    }\n\n    /**\n     * Restituisce la legenda dei corsi presenti nell'orario delle lezioni.\n     */\n    private getLegend() {\n        return this.scheduler.legend;\n    }\n\n    /**\n     * Restituisce le lezioni sulla base del filtro applicato dall'utente.\n     * \n     * @param lessons Le lezioni relative ad un certo giorno della settimana.\n     */\n    private getLessons(lessons: Lesson[]) {\n        return lessons\n            .filter((lesson: Lesson) => this.lessonsSet.has(lesson.teachingCode));\n    }\n\n    /**\n     * Permette di ottenere il giorno della settimana associato al relativo indice intero. \n     * \n     * @param dayIndex L'indice intero che identifica il giorno della settimana. \n     */\n    private getDay(dayIndex: number) {\n        return this.daysLabels[dayIndex];\n    }\n\n    /**\n     * Mostra un modale per poter effettuare un filtraggio attraverso cui selezionare\n     * i corsi di cui si intende visualizzare le lezioni.\n     * \n     * @param courses Rappresenta la legenda dei corsi.\n     * @param checkedSet Rappresenta un Set contenente i codici dei corsi di cui si intende\n     * visualizzarne le lezioni.\n     * @param confirmCallback Rappresenta una callback che verrà invocata durante la chiusura\n     * del modale.\n     */\n    private async presentCourseFilterModal() {\n        const modal = await this.modalController.create({\n            component: CourseFilterModalComponent,\n            componentProps: {\n                courses: this.scheduler.legend,\n                checkedSet: this.lessonsSet,\n                confirmCallback: this.updateSetCallback\n            },\n            cssClass: 'app-modal',\n        });\n\n        return await modal.present();\n    }\n\n    /**\n     * Permette di aggiornare il Set dei corsi di cui si intende visualizzarne le lezioni.\n     * \n     * @param newSet Indica il nuovo Set. \n     */\n    private updateSetCallback(newSet: Set<string>) {\n        this.lessonsSet = newSet;\n        // Aggiornamento altezza slide.\n        setTimeout(() => { this.slides.update() }, 300);\n    }\n\n    /**\n     * Mostra un modale per poter visualizzare i dettagli di una lezione.\n     * \n     * @param lesson Indica la lezione di riferimento.\n     */\n    private async presentLessonModal(lesson: Lesson) {\n        const modal = await this.modalController.create({\n            component: LessonModalComponent,\n            componentProps: {\n                lesson: lesson\n            },\n            cssClass: 'app-modal'\n        })\n\n        return await modal.present();\n    }\n\n}\n","import { NavParams } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport { Lesson } from 'src/app/interfaces/lesson';\n\n@Component({\n    selector: 'app-lesson-modal',\n    templateUrl: './lesson-modal.component.html',\n    styleUrls: ['./lesson-modal.component.scss'],\n})\nexport class LessonModalComponent implements OnInit {\n\n    private lesson: Lesson;\n\n    private readonly daysLabels: any = {\n        0: 'Lunedì',\n        1: 'Martedì',\n        2: 'Mercoledì',\n        3: 'Giovedì',\n        4: 'Venerdì'\n    };\n\n    constructor(\n        private navParams: NavParams\n    ) {\n        this.lesson = this.navParams.get('lesson');\n    }\n\n    ngOnInit() { }\n\n    private getDay() {\n        return this.daysLabels[this.lesson.day];\n    }\n\n}\n","export default \"<app-modal title=\\\"Dettagli lezione\\\">\\n    <ion-list>\\n        <ion-item class=\\\"name\\\">\\n            <ion-thumbnail slot=\\\"start\\\">\\n                <i class=\\\"fas fa-book\\\"></i>\\n            </ion-thumbnail>\\n            <ion-label>\\n                <h3>{{lesson.name}}</h3>\\n            </ion-label>\\n        </ion-item>\\n        <ion-item class=\\\"profs\\\">\\n            <ion-thumbnail slot=\\\"start\\\">\\n                <i class=\\\"fas fa-user-tie\\\"></i>\\n            </ion-thumbnail>\\n            <ion-label *ngFor=\\\"let prof of lesson.profs\\\">\\n                <h3>\\n                    {{prof.firstname}} {{prof.lastname}}\\n                </h3>\\n                <p>{{prof.mail}}</p>\\n            </ion-label>\\n        </ion-item>\\n        <ion-item class=\\\"date\\\">\\n            <ion-thumbnail slot=\\\"start\\\">\\n                <i class=\\\"fas fa-calendar-alt\\\"></i>\\n            </ion-thumbnail>\\n            <ion-label>\\n                <h3>{{getDay()}}</h3>\\n                <p>\\n                    {{lesson.timeStart}} - {{lesson.timeEnd}}\\n                </p>\\n            </ion-label>\\n        </ion-item>\\n        <ion-item class=\\\"room\\\">\\n            <ion-thumbnail slot=\\\"start\\\">\\n                <i class=\\\"fas fa-map\\\"></i>\\n            </ion-thumbnail>\\n            <ion-label>\\n                <h3>{{lesson.room}}</h3>\\n            </ion-label>\\n        </ion-item>\\n        <ion-item class=\\\"courses\\\">\\n            <ion-thumbnail slot=\\\"start\\\">\\n                <i class=\\\"fas fa-graduation-cap\\\"></i>\\n            </ion-thumbnail>\\n            <ion-label>\\n                <h3 *ngFor=\\\"let course of lesson.courses\\\">{{course}}</h3>\\n            </ion-label>\\n        </ion-item>\\n    </ion-list>\\n</app-modal>\\n\";","export default \"ion-item {\\n  margin-bottom: 30px;\\n}\\nion-item:last-child {\\n  margin-bottom: 0;\\n}\\nion-item.name ion-thumbnail {\\n  background: #eaf7ff;\\n}\\nion-item.profs ion-thumbnail {\\n  background: #FFF4F4;\\n}\\nion-item.date ion-thumbnail {\\n  background: #FAF8E9;\\n}\\nion-item.room ion-thumbnail {\\n  background: #FFF1FF;\\n}\\nion-item.courses ion-thumbnail {\\n  background: #E4F6E5;\\n}\\nion-item ion-thumbnail {\\n  margin-right: 15px;\\n  border-radius: 15px;\\n}\\nion-item ion-thumbnail i {\\n  color: rgba(0, 0, 0, 0.2);\\n  mix-blend-mode: color-burn;\\n}\\nion-item ion-label h3 {\\n  font-size: 15px;\\n  font-weight: var(--ion-font-weight-medium);\\n}\\nion-item ion-label p {\\n  color: var(--ion-color-unisa-base);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxsZXNzb24tbW9kYWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtBQUNKO0FBQ0k7RUFDSSxnQkFBQTtBQUNSO0FBRUk7RUFDSSxtQkFBQTtBQUFSO0FBR0k7RUFDSSxtQkFBQTtBQURSO0FBSUk7RUFDSSxtQkFBQTtBQUZSO0FBS0k7RUFDSSxtQkFBQTtBQUhSO0FBTUk7RUFDSSxtQkFBQTtBQUpSO0FBT0k7RUFDSSxrQkFBQTtFQUNBLG1CQUFBO0FBTFI7QUFPUTtFQUNJLHlCQUFBO0VBQ0EsMEJBQUE7QUFMWjtBQVVRO0VBQ0ksZUFBQTtFQUNBLDBDQUFBO0FBUlo7QUFXUTtFQUNJLGtDQUFBO0FBVFoiLCJmaWxlIjoibGVzc29uLW1vZGFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWl0ZW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuXHJcbiAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJi5uYW1lIGlvbi10aHVtYm5haWwge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNlYWY3ZmY7XHJcbiAgICB9XHJcblxyXG4gICAgJi5wcm9mcyBpb24tdGh1bWJuYWlsIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjRkZGNEY0O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmLmRhdGUgaW9uLXRodW1ibmFpbCB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI0ZBRjhFOTtcclxuICAgIH1cclxuXHJcbiAgICAmLnJvb20gaW9uLXRodW1ibmFpbCB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI0ZGRjFGRjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJi5jb3Vyc2VzIGlvbi10aHVtYm5haWwge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNFNEY2RTU7XHJcbiAgICB9XHJcblxyXG4gICAgaW9uLXRodW1ibmFpbCB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcblxyXG4gICAgICAgIGkge1xyXG4gICAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgICAgICAgICBtaXgtYmxlbmQtbW9kZTogY29sb3ItYnVybjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaW9uLWxhYmVsIHtcclxuICAgICAgICBoMyB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IHZhcigtLWlvbi1mb250LXdlaWdodC1tZWRpdW0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItdW5pc2EtYmFzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LessonsPage } from './lessons.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LessonsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LessonsPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3Vyc2UtZmlsdGVyLW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LessonsPageRoutingModule } from './lessons-routing.module';\n\nimport { LessonsPage } from './lessons.page';\nimport { UtilityModule } from '../../utility/utility.module';\nimport { LessonsCourseComponent } from './components/lessons-course/lessons-course.component';\nimport { LessonsProfComponent } from './components/lessons-prof/lessons-prof.component';\nimport { CourseFilterModalComponent } from './components/course-filter-modal/course-filter-modal.component';\nimport { LessonModalComponent } from './components/lesson-modal/lesson-modal.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LessonsPageRoutingModule,\n    UtilityModule\n  ],\n  declarations: [\n    LessonsPage,\n    LessonsCourseComponent,\n    LessonsProfComponent,\n    CourseFilterModalComponent,\n    LessonModalComponent\n  ],\n  exports: [\n    LessonsCourseComponent,\n    LessonsProfComponent,\n    CourseFilterModalComponent,\n  ]\n})\nexport class LessonsPageModule { }\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Lesson } from 'src/app/interfaces/lesson';\nimport { Schedule } from 'src/app/interfaces/schedule';\nimport { Scheduler } from 'src/app/interfaces/scheduler';\nimport { SessionProf } from 'src/app/interfaces/session-prof';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LessonsService {\n\n    private readonly base = `${environment.easycourseApi}/AgendaStudenti/`;\n\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    /**\n     * Effettua il parsing della risposta restituendo i dati in formato JSON.\n     * \n     * @param res La risposta da parsare. \n     */\n    private parseResponse(res: String): String {\n        return JSON.parse(res.split(';')[0]);\n    }\n\n    /**\n     * Recupera le combo di filtraggio relative all'opzione 'Anno Accademico', sia per \n     * la pagina dei corsi che per la pagina dei docenti.\n     */\n    getLessonsYearOptions(): Observable<any> {\n        return this.http.get(`${this.base}/combo_call_new.php`, {\n            params: new HttpParams()\n                .set('sw', 'ec_')\n                .set('aa', '1')\n        });\n    }\n\n    /**\n     * Recupera le opzioni di filtraggio relative all'opzione 'Corso di Studio' per la\n     * pagina dei corsi.\n     * \n     * @param year Indica l'Anno Accademico di riferimento.\n     */\n    getLessonsCourseOptions(year: string): Observable<any> {\n        return this.http.get(`${this.base}/combo_call_new.php`, {\n            params: new HttpParams()\n                .set('sw', 'ec_')\n                .set('aa', year)\n                .set('page', 'corsi'),\n            responseType: 'text'\n        }).pipe(\n            map((res: any) => {\n                return this.parseResponse(res);\n            })\n        )\n    }\n\n    /**\n     * Recupera le opzioni di filtraggio relative all'opzione 'Docente' per la pagina\n     * dei docenti.\n     * \n     * @param year Indica l'Anno Accademico di riferimento. \n     */\n    getLessonsProfOptions(year: string): Observable<any> {\n        return this.http.get(`${this.base}/combo_call_new.php`, {\n            params: new HttpParams()\n                .set('sw', 'ec_')\n                .set('aa', year)\n                .set('page', 'docenti')\n        });\n    }\n\n    /**\n     * Recupera le opzioni di filtraggio relative all'opzione 'Anno di Studio' per la\n     * pagina dei corsi.\n     * \n     * @param year Indica l'Anno Accademico di riferimento. \n     * @param course Indica il codice identificativo del Corso di Studio di riferimento.\n     */\n    getLessonsCourseYearsOptions(year: string, course: string): Observable<any> {\n        return this.http.get(`${this.base}/call_redis.php`, {\n            params: new HttpParams()\n                .set('key', `UNISA_${year}_ec_elenco_anno2_${course}`)\n        });\n    }\n\n    /**\n     * Recupera il Calendario delle Lezioni per Insegnamento.\n     * \n     * @param year Indica l'Anno Accademico di riferimento.\n     * @param course Indica il codice identificativo del Corso di Studio di riferimento.\n     * @param courseYear Indica il Codice del Curriculum e l'Anno di Corso di riferimento,\n     * separati dal carattere | (pipe).\n     * @param term Indica il codice del Periodo Didattico di riferimento.\n     */\n    getLessonsByCourse(\n        year: string,\n        course: string,\n        courseYear: string,\n        term: string\n    ): Observable<Scheduler> {\n        return this.http.get(`${this.base}/grid_call_new.php`, {\n            params: new HttpParams()\n                .set('view', 'easycourse')\n                .set('include', 'corso')\n                .set('anno', year)\n                .set('corso', course)\n                .set('anno2', courseYear)\n                .set('visualizzazione_orario', 'std')\n                .set('periodo_didattico', term)\n        }).pipe(\n            map((res: any) => this.getLessons(res))\n        )\n    }\n\n    /**\n     * ecupera il Calendario delle Lezioni per Docente.\n     * \n     * @param year Indica l'Anno Accademico di riferimento.\n     * @param prof Indica la matricola del Docente di riferimento.\n     * @param term Indica il codice del Periodo Didattico di riferimento\n     */\n    getLessonsByProf(\n        year: string,\n        prof: string,\n        term: string\n    ): Observable<Scheduler> {\n        return this.http.get(`${this.base}/grid_call_new.php`, {\n            params: new HttpParams()\n                .set('view', 'easycourse')\n                .set('include', 'docente')\n                .set('anno', year)\n                .set('docente', prof)\n                .set('visualizzazione_orario', 'std')\n                .set('periodo_didattico', term)\n        }).pipe(\n            map((res: any) => this.getLessons(res))\n        )\n    }\n\n    /**\n     * Manipola la risposta ottenuta dal server al fine di ottenere i dati in un unico formato.\n     * \n     * @param res La risposta ottenuta dal server. \n     */\n    private getLessons(res: any) {\n        const daysLabels = {\n            'monday': 0,\n            'tuesday': 1,\n            'wednesday': 2,\n            'thursday': 3,\n            'friday': 4\n        };\n\n        const lessons: Array<any> = res.celle;\n        const schedule = {\n            0: [] as Lesson[],\n            1: [] as Lesson[],\n            2: [] as Lesson[],\n            3: [] as Lesson[],\n            4: [] as Lesson[]\n        } as Schedule;\n        const legend: any = {};\n\n        lessons.forEach((lesson: any) => {\n            const name = lesson.nome_insegnamento.replace('<i class=\"fa fa-asterisk\" aria-hidden title=\"*\"></i>', '').trim();\n            const teachingCode = lesson.codice_insegnamento;\n            const day = lesson.data.toLocaleLowerCase();\n            const courses = lesson.percorso_didattico.split('<br />');\n\n            let profsFullnames = lesson.docente;\n            let profsMails = lesson.mail_docente;\n            const profs: SessionProf[] = [];\n\n            if (profsFullnames) {\n                profsFullnames = profsFullnames.split(',');\n                profsMails = profsMails ? profsMails.split(',') : [];\n\n                profsFullnames.forEach((fullname: string, index: number) => {\n                    const [lastname, firstname] = fullname.trim().split(' ');\n                    const mail = profsMails[index] || '';\n\n                    profs.push({\n                        firstname: firstname,\n                        lastname: lastname,\n                        mail: mail\n                    })\n                })\n            }\n\n            const dayIndex = daysLabels[day];\n            schedule[dayIndex].push({\n                name: name,\n                teachingCode: teachingCode,\n                day: dayIndex,\n                timeStart: lesson.ora_inizio,\n                timeEnd: lesson.ora_fine,\n                room: lesson.aula,\n                profs: profs,\n                courses: courses,\n            } as Lesson);\n\n            legend[teachingCode] || (legend[teachingCode] = name);\n        });\n\n        return {\n            schedule: schedule,\n            legend: legend\n        } as Scheduler;\n    }\n\n}\n"]}