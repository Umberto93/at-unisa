{"version":3,"sources":["./src/app/services/esse3/profile/profile.service.ts","./src/app/pages/esse3/profile/profile.module.ts","./src/app/pages/esse3/profile/profile.page.scss","./src/app/pages/esse3/profile/profile.page.html","./src/app/pages/esse3/profile/profile.page.ts","./src/app/pages/esse3/profile/profile-routing.module.ts"],"names":[],"mappings":"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","file":"profile-profile-module-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Profile } from 'src/app/interfaces/profile';\r\nimport { ProfileDetails } from 'src/app/interfaces/profile-details';\r\nimport { ProfileResidence } from 'src/app/interfaces/profile-residence';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n    private readonly base = `${environment.esse3Api}/anagrafica-service-v2`;\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n    \r\n    /**\r\n     * Preleva le informazioni relative all'anagrafica dell'utente.\r\n     * \r\n     * @param persId L'id relativo alla specifica persona che viene restituito all'utente dopo \r\n     * aver effettuato l'autenticazione.\r\n     */\r\n    getProfile(persId: number): Observable<Profile> {\r\n        return this.http.get<Profile>(`${this.base}/persone/${persId}`)\r\n            .pipe(map((res: any) => {\r\n\r\n                const details: ProfileDetails = {\r\n                    birthCountry: res.naziNascDes,\r\n                    birthDate: this.getDate(res.dataNascita),\r\n                    birthDistrict: res.comuNascDes,\r\n                    birthProvince: res.provNascDes,\r\n                    citizenship: res.desCittadinanza,\r\n                    gender: res.sesso,\r\n                    firstname: res.nome,\r\n                    fiscalCode: res.codFis,\r\n                    lastname: res.cognome,\r\n                };\r\n\r\n                const residence: ProfileResidence = {\r\n                    address: res.viaRes,\r\n                    district: res.comuResDes,\r\n                    nation: res.naziResDes,\r\n                    province: res.comuResSigla,\r\n                    phone: res.telRes,\r\n                    streetNumber: res.numCivRes,\r\n                    zipCode: res.capRes\r\n                };\r\n\r\n                const domicile: ProfileResidence = {\r\n                    address: res.viaDom,\r\n                    district: res.comuDomDes,\r\n                    nation: res.naziDomDes,\r\n                    province: res.comuDomSigla,\r\n                    phone: res.telDom,\r\n                    streetNumber: res.numCivDom,\r\n                    zipCode: res.capDom\r\n                }\r\n\r\n                const isResEqualDom: boolean = this.isEqual(residence, domicile);\r\n\r\n\r\n                return {\r\n                    details: details,\r\n                    residence: residence,\r\n                    isResEqualDom: isResEqualDom,\r\n                    ...(!isResEqualDom && { domicile: domicile })\r\n                } as Profile;\r\n            }));\r\n    }\r\n\r\n    /**\r\n     * Manipola la data restituita dal server, prelevando solo la porzione di interesse, eliminando\r\n     * l'orario.\r\n     * \r\n     * @param dateTime La data restituita in risposta dal server.\r\n     */\r\n    private getDate(dateTime: string): String {\r\n        return dateTime.split(' ')[0];\r\n    }\r\n\r\n    /**\r\n     * Il metodo ritorna true se la residenza e il domicilio coincidono.\r\n     * \r\n     * @param resObj L'oggetto residenza.\r\n     * @param domObj L'oggetto domicilio.\r\n     */\r\n    private isEqual(resObj: ProfileResidence, domObj: ProfileResidence): boolean {\r\n        const keysRes = Object.keys(resObj);\r\n\r\n        keysRes.forEach((key: any) => {\r\n            if (resObj[key] !== domObj[key]) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProfilePageRoutingModule } from './profile-routing.module';\r\n\r\nimport { ProfilePage } from './profile.page';\r\nimport { UtilityModule } from '../../utility/utility.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        ProfilePageRoutingModule,\r\n        UtilityModule\r\n    ],\r\n    declarations: [ProfilePage]\r\n})\r\nexport class ProfilePageModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9maWxlLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-content class=\\\"page-content\\\">\\r\\n    <app-refresher [refreshCallback]=\\\"getProfile\\\"></app-refresher>\\r\\n    <div class=\\\"flex flex-direction-column\\\">\\r\\n        <app-header>\\r\\n            <ion-toolbar>\\r\\n                <ion-title class=\\\"page-title\\\">Profilo</ion-title>\\r\\n            </ion-toolbar>\\r\\n            <ion-toolbar class=\\\"segment-toolbar\\\">\\r\\n                <ion-segment\\r\\n                    [value]=\\\"activeIndex\\\"\\r\\n                    (ionChange)=\\\"slideTo($event)\\\"\\r\\n                    swipeGesture=\\\"false\\\"\\r\\n                >\\r\\n                    <ion-segment-button\\r\\n                        *ngFor=\\\"let label of labels; index as i\\\"\\r\\n                        [value]=\\\"i\\\"\\r\\n                    >\\r\\n                        <ion-label>{{label}}</ion-label>\\r\\n                    </ion-segment-button>\\r\\n                </ion-segment>\\r\\n            </ion-toolbar>\\r\\n        </app-header>\\r\\n        <div class=\\\"page-main\\\">\\r\\n            <ion-slides\\r\\n                *ngIf=\\\"isReady\\\"\\r\\n                (ionSlideWillChange)=\\\"setActiveIndex()\\\"\\r\\n                [options]=\\\"slideOpts\\\"\\r\\n            >\\r\\n                <ion-slide>\\r\\n                    <ion-list class=\\\"app-list\\\">\\r\\n                        <ion-item *ngFor=\\\"let item of detailsTranslation | keyvalue: noSort\\\">\\r\\n                            <ion-label>\\r\\n                                <h3>{{item.value}}</h3>\\r\\n                                <div>{{profile.details[item.key]}}</div>\\r\\n                            </ion-label>\\r\\n                        </ion-item>\\r\\n                    </ion-list>\\r\\n                </ion-slide>\\r\\n                <ion-slide>\\r\\n                    <ion-list class=\\\"app-list\\\">\\r\\n                        <ion-list-header>\\r\\n                            <ion-label>Residenza</ion-label>\\r\\n                        </ion-list-header>\\r\\n                        <ion-item *ngFor=\\\"let item of homeTranslation | keyvalue: noSort\\\">\\r\\n                            <ion-label>\\r\\n                                <h3>{{item.value}}</h3>\\r\\n                                <div>{{profile.residence[item.key]}}</div>\\r\\n                            </ion-label>\\r\\n                        </ion-item>\\r\\n                        <div *ngIf=\\\"!profile.isResEqualDom\\\">\\r\\n                            <ion-list-header>\\r\\n                                <ion-label>Domicilio</ion-label>\\r\\n                            </ion-list-header>\\r\\n                            <ion-item *ngFor=\\\"let item of homeTranslation | keyvalue: noSort\\\">\\r\\n                                <ion-label>\\r\\n                                    <h3>{{item.value}}</h3>\\r\\n                                    <div>{{profile.domicile[item.key]}}</div>\\r\\n                                </ion-label>\\r\\n                            </ion-item>\\r\\n                        </div>\\r\\n                    </ion-list>\\r\\n                </ion-slide>\\r\\n            </ion-slides>\\r\\n        </div>\\r\\n    </div>\\r\\n</ion-content>\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { IonSegment, IonSlides } from '@ionic/angular';\r\nimport { Profile } from 'src/app/interfaces/profile';\r\nimport { ProfileDetails } from 'src/app/interfaces/profile-details';\r\nimport { ProfileService } from 'src/app/services/esse3/profile/profile.service';\r\nimport { UserService } from 'src/app/services/user/user.service';\r\n\r\n@Component({\r\n    selector: 'app-profile',\r\n    templateUrl: './profile.page.html',\r\n    styleUrls: ['./profile.page.scss'],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n    @ViewChild(IonSlides) slides: IonSlides;\r\n    @ViewChild(IonSegment) segment: IonSegment;\r\n\r\n    private persId: number;\r\n    private isReady: boolean;\r\n    private activeIndex: number;\r\n    private labels: String[];\r\n    private slideOpts: any;\r\n    private profile: Profile;\r\n    private detailsTranslation: any;\r\n    private homeTranslation: any;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private profileService: ProfileService\r\n    ) {\r\n        this.labels = ['Anagrafica', 'Abitazione'];\r\n        this.activeIndex = 0;\r\n        this.isReady = false;\r\n        this.slideOpts = {\r\n            autoHeight: true,\r\n            spaceBetween: 20\r\n        };\r\n\r\n        this.detailsTranslation = {\r\n            firstname: 'nome',\r\n            lastname: 'cognome',\r\n            gender: 'sesso',\r\n            birthDate: 'data di nascita',\r\n            citizenship: 'cittadinanza',\r\n            birthCountry: 'nazione di nascita',\r\n            birthProvince: 'provincia di nascita',\r\n            birthDistrict: 'comune/città di nascita',\r\n            fiscalCode: 'codice fiscale'\r\n        };\r\n\r\n        this.homeTranslation = {\r\n            nation: 'nazione',\r\n            province: 'provincia',\r\n            district: 'comune/città',\r\n            zipCode: 'CAP',\r\n            address: 'indirizzo',\r\n            streetNumber: 'n° civico',\r\n            phone: 'telefono'\r\n        };\r\n\r\n        this.getProfile = this.getProfile.bind(this);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        const profile = await this.userService.getUser();\r\n\r\n        this.persId = profile.user.persId;\r\n        this.getProfile();\r\n    }\r\n\r\n    /**\r\n     * Recupera i dati dell'utenti relativi all'anagrafica e alla residenza / domicilio.\r\n     */\r\n    private getProfile() {\r\n        return this.profileService.getProfile(this.persId)\r\n            .subscribe((profile: Profile) => {\r\n                this.isReady = true;\r\n                this.profile = profile;\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Non imposta alcun tipo di ordinamento sull'oggetto.\r\n     */\r\n    private noSort() {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Aggiorna la slide alla pressione in base allo specifico Segment Button.\r\n     * \r\n     * @param event L'evento associato al Segment Button.\r\n     */\r\n    private async slideTo(event: CustomEvent) {\r\n        const target = event.target as HTMLIonSegmentButtonElement;\r\n        const value = parseInt(target.value);\r\n\r\n        await this.slides.slideTo(value);\r\n        this.activeIndex = value;\r\n    }\r\n\r\n    /**\r\n     * Aggiorna il Segment Button sulla base dell'indice corrente della slide.\r\n     */\r\n    private async setActiveIndex() {\r\n        const index = await this.slides.getActiveIndex();\r\n\r\n        if (index !== this.activeIndex) {\r\n            const button = this.segment['el'].children[index] as HTMLElement;\r\n            button.click();\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ProfilePage\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class ProfilePageRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}